                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.4.0 #8981 (Apr  5 2014) (Linux)
                                      4 ; This file was generated Mon Oct 13 02:05:09 2014
                                      5 ;--------------------------------------------------------
                                      6 	.module snake_game
                                      7 	.optsdcc -mstm8
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _snake_tiles
                                     13 	.globl _init_sequence
                                     14 	.globl _main
                                     15 	.globl _moveSnake
                                     16 	.globl _iterateSnakeTail
                                     17 	.globl _iterateSnakeHead
                                     18 	.globl _setSnakeTile
                                     19 	.globl _ADCread
                                     20 	.globl _clrPixel
                                     21 	.globl _setPixel
                                     22 	.globl _refreshSnakeTile
                                     23 	.globl _refreshBlock
                                     24 	.globl _writeDataFast
                                     25 	.globl _initLCD
                                     26 	.globl _snake
                                     27 	.globl _bait_pos
                                     28 	.globl _Snake_array
                                     29 	.globl _snake_heading
                                     30 	.globl _LCD_Y
                                     31 	.globl _LCD_X
                                     32 	.globl _LCD_RAM
                                     33 	.globl _gotoX
                                     34 	.globl _gotoY
                                     35 	.globl _writeData
                                     36 ;--------------------------------------------------------
                                     37 ; ram data
                                     38 ;--------------------------------------------------------
                                     39 	.area DATA
      000000                         40 _LCD_RAM::
      000000                         41 	.ds 504
                                     42 ;--------------------------------------------------------
                                     43 ; ram data
                                     44 ;--------------------------------------------------------
                                     45 	.area INITIALIZED
      000000                         46 _LCD_X::
      000000                         47 	.ds 1
      000001                         48 _LCD_Y::
      000001                         49 	.ds 1
      000002                         50 _snake_heading::
      000002                         51 	.ds 1
      000003                         52 _Snake_array::
      000003                         53 	.ds 210
      0000D5                         54 _bait_pos::
      0000D5                         55 	.ds 3
      0000D8                         56 _snake::
      0000D8                         57 	.ds 7
                                     58 ;--------------------------------------------------------
                                     59 ; Stack segment in internal ram 
                                     60 ;--------------------------------------------------------
                                     61 	.area	SSEG
      000000                         62 __start__stack:
      000000                         63 	.ds	1
                                     64 
                                     65 ;--------------------------------------------------------
                                     66 ; absolute external ram data
                                     67 ;--------------------------------------------------------
                                     68 	.area DABS (ABS)
                                     69 ;--------------------------------------------------------
                                     70 ; interrupt vector 
                                     71 ;--------------------------------------------------------
                                     72 	.area HOME
      000000                         73 __interrupt_vect:
      000000 82v00u00u00             74 	int s_GSINIT ;reset
      000004 82 00 00 00             75 	int 0x0000 ;trap
      000008 82 00 00 00             76 	int 0x0000 ;int0
      00000C 82 00 00 00             77 	int 0x0000 ;int1
      000010 82 00 00 00             78 	int 0x0000 ;int2
      000014 82 00 00 00             79 	int 0x0000 ;int3
      000018 82 00 00 00             80 	int 0x0000 ;int4
      00001C 82 00 00 00             81 	int 0x0000 ;int5
      000020 82 00 00 00             82 	int 0x0000 ;int6
      000024 82 00 00 00             83 	int 0x0000 ;int7
      000028 82 00 00 00             84 	int 0x0000 ;int8
      00002C 82 00 00 00             85 	int 0x0000 ;int9
      000030 82 00 00 00             86 	int 0x0000 ;int10
      000034 82 00 00 00             87 	int 0x0000 ;int11
      000038 82 00 00 00             88 	int 0x0000 ;int12
      00003C 82 00 00 00             89 	int 0x0000 ;int13
      000040 82 00 00 00             90 	int 0x0000 ;int14
      000044 82 00 00 00             91 	int 0x0000 ;int15
      000048 82 00 00 00             92 	int 0x0000 ;int16
      00004C 82 00 00 00             93 	int 0x0000 ;int17
      000050 82 00 00 00             94 	int 0x0000 ;int18
      000054 82 00 00 00             95 	int 0x0000 ;int19
      000058 82 00 00 00             96 	int 0x0000 ;int20
      00005C 82 00 00 00             97 	int 0x0000 ;int21
      000060 82 00 00 00             98 	int 0x0000 ;int22
      000064 82 00 00 00             99 	int 0x0000 ;int23
      000068 82 00 00 00            100 	int 0x0000 ;int24
      00006C 82 00 00 00            101 	int 0x0000 ;int25
      000070 82 00 00 00            102 	int 0x0000 ;int26
      000074 82 00 00 00            103 	int 0x0000 ;int27
      000078 82 00 00 00            104 	int 0x0000 ;int28
      00007C 82 00 00 00            105 	int 0x0000 ;int29
                                    106 ;--------------------------------------------------------
                                    107 ; global & static initialisations
                                    108 ;--------------------------------------------------------
                                    109 	.area HOME
                                    110 	.area GSINIT
                                    111 	.area GSFINAL
                                    112 	.area GSINIT
      000000                        113 __sdcc_gs_init_startup:
      000000                        114 __sdcc_init_data:
                                    115 ; stm8_genXINIT() start
      000000 AEr00r00         [ 2]  116 	ldw x, #l_DATA
      000003 27 07            [ 1]  117 	jreq	00002$
      000005                        118 00001$:
      000005 72 4FuFFuFF      [ 1]  119 	clr (s_DATA - 1, x)
      000009 5A               [ 2]  120 	decw x
      00000A 26 F9            [ 1]  121 	jrne	00001$
      00000C                        122 00002$:
      00000C AEr00r00         [ 2]  123 	ldw	x, #l_INITIALIZER
      00000F 27 09            [ 1]  124 	jreq	00004$
      000011                        125 00003$:
      000011 D6uFFuFF         [ 1]  126 	ld	a, (s_INITIALIZER - 1, x)
      000014 D7uFFuFF         [ 1]  127 	ld	(s_INITIALIZED - 1, x), a
      000017 5A               [ 2]  128 	decw	x
      000018 26 F7            [ 1]  129 	jrne	00003$
      00001A                        130 00004$:
                                    131 ; stm8_genXINIT() end
                                    132 	.area GSFINAL
      000000 CCr00r80         [ 2]  133 	jp	__sdcc_program_startup
                                    134 ;--------------------------------------------------------
                                    135 ; Home
                                    136 ;--------------------------------------------------------
                                    137 	.area HOME
                                    138 	.area HOME
      000080                        139 __sdcc_program_startup:
      000080 CCr0Br78         [ 2]  140 	jp	_main
                                    141 ;	return from main will return to caller
                                    142 ;--------------------------------------------------------
                                    143 ; code
                                    144 ;--------------------------------------------------------
                                    145 	.area CODE
                                    146 ;	snake_game.c: 163: void initLCD(void)
                                    147 ;	-----------------------------------------
                                    148 ;	 function initLCD
                                    149 ;	-----------------------------------------
      000000                        150 _initLCD:
      000000 52 09            [ 2]  151 	sub	sp, #9
                                    152 ;	snake_game.c: 128: for(i = 0; i < delay; i++)
      000002 5F               [ 1]  153 	clrw	x
      000003                        154 00117$:
      000003 A3 EA 60         [ 2]  155 	cpw	x, #0xea60
      000006 24 04            [ 1]  156 	jrnc	00107$
                                    157 ;	snake_game.c: 129: __asm__("nop");
      000008 9D               [ 1]  158 	nop
                                    159 ;	snake_game.c: 128: for(i = 0; i < delay; i++)
      000009 5C               [ 2]  160 	incw	x
      00000A 20 F7            [ 2]  161 	jra	00117$
                                    162 ;	snake_game.c: 167: delay16b(60000);
      00000C                        163 00107$:
                                    164 ;	snake_game.c: 168: SET_RESET;
      00000C AE 50 0A         [ 2]  165 	ldw	x, #0x500a
      00000F F6               [ 1]  166 	ld	a, (x)
      000010 A4 FB            [ 1]  167 	and	a, #0xfb
      000012 F7               [ 1]  168 	ld	(x), a
                                    169 ;	snake_game.c: 128: for(i = 0; i < delay; i++)
      000013 5F               [ 1]  170 	clrw	x
      000014                        171 00120$:
      000014 A3 EA 60         [ 2]  172 	cpw	x, #0xea60
      000017 24 04            [ 1]  173 	jrnc	00109$
                                    174 ;	snake_game.c: 129: __asm__("nop");
      000019 9D               [ 1]  175 	nop
                                    176 ;	snake_game.c: 128: for(i = 0; i < delay; i++)
      00001A 5C               [ 2]  177 	incw	x
      00001B 20 F7            [ 2]  178 	jra	00120$
                                    179 ;	snake_game.c: 169: delay16b(60000);
      00001D                        180 00109$:
                                    181 ;	snake_game.c: 171: CLR_RESET;
      00001D AE 50 0A         [ 2]  182 	ldw	x, #0x500a
      000020 F6               [ 1]  183 	ld	a, (x)
      000021 AA 04            [ 1]  184 	or	a, #0x04
      000023 F7               [ 1]  185 	ld	(x), a
                                    186 ;	snake_game.c: 172: SET_CS;
      000024 AE 50 0A         [ 2]  187 	ldw	x, #0x500a
      000027 F6               [ 1]  188 	ld	a, (x)
      000028 A4 F7            [ 1]  189 	and	a, #0xf7
      00002A F7               [ 1]  190 	ld	(x), a
                                    191 ;	snake_game.c: 173: SET_COMMAND;
      00002B AE 50 0A         [ 2]  192 	ldw	x, #0x500a
      00002E F6               [ 1]  193 	ld	a, (x)
      00002F A4 EF            [ 1]  194 	and	a, #0xef
      000031 F7               [ 1]  195 	ld	(x), a
                                    196 ;	snake_game.c: 128: for(i = 0; i < delay; i++)
      000032 5F               [ 1]  197 	clrw	x
      000033                        198 00123$:
      000033 A3 09 EC         [ 2]  199 	cpw	x, #0x09ec
      000036 24 04            [ 1]  200 	jrnc	00140$
                                    201 ;	snake_game.c: 129: __asm__("nop");
      000038 9D               [ 1]  202 	nop
                                    203 ;	snake_game.c: 128: for(i = 0; i < delay; i++)
      000039 5C               [ 2]  204 	incw	x
      00003A 20 F7            [ 2]  205 	jra	00123$
                                    206 ;	snake_game.c: 176: while(init_sequence[i] != 0x00){
      00003C                        207 00140$:
      00003C AEr0Cr86         [ 2]  208 	ldw	x, #_init_sequence+0
      00003F 1F 08            [ 2]  209 	ldw	(0x08, sp), x
      000041 0F 01            [ 1]  210 	clr	(0x01, sp)
      000043                        211 00101$:
      000043 5F               [ 1]  212 	clrw	x
      000044 7B 01            [ 1]  213 	ld	a, (0x01, sp)
      000046 97               [ 1]  214 	ld	xl, a
      000047 72 FB 08         [ 2]  215 	addw	x, (0x08, sp)
      00004A F6               [ 1]  216 	ld	a, (x)
      00004B 4D               [ 1]  217 	tnz	a
      00004C 27 15            [ 1]  218 	jreq	00103$
                                    219 ;	snake_game.c: 159: while(*reg & mask)
      00004E                        220 00112$:
      00004E 90 AE 52 03      [ 2]  221 	ldw	y, #0x5203
      000052 90 F6            [ 1]  222 	ld	a, (y)
      000054 48               [ 1]  223 	sll	a
      000055 24 03            [ 1]  224 	jrnc	00115$
                                    225 ;	snake_game.c: 160: __asm__("nop");
      000057 9D               [ 1]  226 	nop
      000058 20 F4            [ 2]  227 	jra	00112$
                                    228 ;	snake_game.c: 177: waitForLo(&SPI->SR, 0x80);  /* Wait while SPI is busy transmitting data */
      00005A                        229 00115$:
                                    230 ;	snake_game.c: 178: SPI->DR = init_sequence[i];
      00005A F6               [ 1]  231 	ld	a, (x)
      00005B AE 52 04         [ 2]  232 	ldw	x, #0x5204
      00005E F7               [ 1]  233 	ld	(x), a
                                    234 ;	snake_game.c: 179: i++;
      00005F 0C 01            [ 1]  235 	inc	(0x01, sp)
      000061 20 E0            [ 2]  236 	jra	00101$
      000063                        237 00103$:
                                    238 ;	snake_game.c: 182: gotoX(0);
      000063 4B 00            [ 1]  239 	push	#0x00
      000065 CDr00rAE         [ 4]  240 	call	_gotoX
      000068 84               [ 1]  241 	pop	a
                                    242 ;	snake_game.c: 183: gotoY(0);
      000069 4B 00            [ 1]  243 	push	#0x00
      00006B CDr00rCD         [ 4]  244 	call	_gotoY
      00006E 84               [ 1]  245 	pop	a
                                    246 ;	snake_game.c: 184: for(i = 0; i < 6; i++){
      00006F 4F               [ 1]  247 	clr	a
      000070                        248 00127$:
                                    249 ;	snake_game.c: 185: gotoY(i);
      000070 88               [ 1]  250 	push	a
      000071 88               [ 1]  251 	push	a
      000072 CDr00rCD         [ 4]  252 	call	_gotoY
      000075 84               [ 1]  253 	pop	a
      000076 84               [ 1]  254 	pop	a
                                    255 ;	snake_game.c: 186: for(x=0; x < 84; x++){
      000077 5F               [ 1]  256 	clrw	x
      000078 1F 02            [ 2]  257 	ldw	(0x02, sp), x
      00007A 5F               [ 1]  258 	clrw	x
      00007B 1F 06            [ 2]  259 	ldw	(0x06, sp), x
      00007D                        260 00125$:
                                    261 ;	snake_game.c: 187: writeData(0);
      00007D 88               [ 1]  262 	push	a
      00007E 4B 00            [ 1]  263 	push	#0x00
      000080 CDr01r06         [ 4]  264 	call	_writeData
      000083 84               [ 1]  265 	pop	a
      000084 84               [ 1]  266 	pop	a
                                    267 ;	snake_game.c: 188: LCD_RAM[x][i] = 0;
      000085 AEr00r00         [ 2]  268 	ldw	x, #_LCD_RAM+0
      000088 72 FB 06         [ 2]  269 	addw	x, (0x06, sp)
      00008B 1F 04            [ 2]  270 	ldw	(0x04, sp), x
      00008D 5F               [ 1]  271 	clrw	x
      00008E 97               [ 1]  272 	ld	xl, a
      00008F 72 FB 04         [ 2]  273 	addw	x, (0x04, sp)
      000092 7F               [ 1]  274 	clr	(x)
                                    275 ;	snake_game.c: 186: for(x=0; x < 84; x++){
      000093 1E 06            [ 2]  276 	ldw	x, (0x06, sp)
      000095 1C 00 06         [ 2]  277 	addw	x, #0x0006
      000098 1F 06            [ 2]  278 	ldw	(0x06, sp), x
      00009A 1E 02            [ 2]  279 	ldw	x, (0x02, sp)
      00009C 5C               [ 2]  280 	incw	x
      00009D 1F 02            [ 2]  281 	ldw	(0x02, sp), x
      00009F 1E 02            [ 2]  282 	ldw	x, (0x02, sp)
      0000A1 A3 00 54         [ 2]  283 	cpw	x, #0x0054
      0000A4 25 D7            [ 1]  284 	jrc	00125$
                                    285 ;	snake_game.c: 184: for(i = 0; i < 6; i++){
      0000A6 4C               [ 1]  286 	inc	a
      0000A7 A1 06            [ 1]  287 	cp	a, #0x06
      0000A9 25 C5            [ 1]  288 	jrc	00127$
      0000AB 5B 09            [ 2]  289 	addw	sp, #9
      0000AD 81               [ 4]  290 	ret
                                    291 ;	snake_game.c: 193: void gotoX(uint8_t X_address)
                                    292 ;	-----------------------------------------
                                    293 ;	 function gotoX
                                    294 ;	-----------------------------------------
      0000AE                        295 _gotoX:
                                    296 ;	snake_game.c: 195: LCD_X = X_address;
      0000AE 7B 03            [ 1]  297 	ld	a, (0x03, sp)
      0000B0 C7u00u00         [ 1]  298 	ld	_LCD_X+0, a
                                    299 ;	snake_game.c: 159: while(*reg & mask)
      0000B3                        300 00101$:
      0000B3 AE 52 03         [ 2]  301 	ldw	x, #0x5203
      0000B6 F6               [ 1]  302 	ld	a, (x)
      0000B7 48               [ 1]  303 	sll	a
      0000B8 24 03            [ 1]  304 	jrnc	00104$
                                    305 ;	snake_game.c: 160: __asm__("nop");
      0000BA 9D               [ 1]  306 	nop
      0000BB 20 F6            [ 2]  307 	jra	00101$
                                    308 ;	snake_game.c: 196: waitForLo(&SPI->SR, 0x80);  /* Wait while SPI is busy transmitting data */
      0000BD                        309 00104$:
                                    310 ;	snake_game.c: 197: SET_COMMAND;
      0000BD AE 50 0A         [ 2]  311 	ldw	x, #0x500a
      0000C0 F6               [ 1]  312 	ld	a, (x)
      0000C1 A4 EF            [ 1]  313 	and	a, #0xef
      0000C3 F7               [ 1]  314 	ld	(x), a
                                    315 ;	snake_game.c: 198: SPI->DR = X_address | 0x80;
      0000C4 7B 03            [ 1]  316 	ld	a, (0x03, sp)
      0000C6 AA 80            [ 1]  317 	or	a, #0x80
      0000C8 AE 52 04         [ 2]  318 	ldw	x, #0x5204
      0000CB F7               [ 1]  319 	ld	(x), a
      0000CC 81               [ 4]  320 	ret
                                    321 ;	snake_game.c: 201: void gotoY(uint8_t Y_address)
                                    322 ;	-----------------------------------------
                                    323 ;	 function gotoY
                                    324 ;	-----------------------------------------
      0000CD                        325 _gotoY:
                                    326 ;	snake_game.c: 203: LCD_Y = Y_address;
      0000CD 7B 03            [ 1]  327 	ld	a, (0x03, sp)
      0000CF C7u00u01         [ 1]  328 	ld	_LCD_Y+0, a
                                    329 ;	snake_game.c: 159: while(*reg & mask)
      0000D2                        330 00101$:
      0000D2 AE 52 03         [ 2]  331 	ldw	x, #0x5203
      0000D5 F6               [ 1]  332 	ld	a, (x)
      0000D6 48               [ 1]  333 	sll	a
      0000D7 24 03            [ 1]  334 	jrnc	00104$
                                    335 ;	snake_game.c: 160: __asm__("nop");
      0000D9 9D               [ 1]  336 	nop
      0000DA 20 F6            [ 2]  337 	jra	00101$
                                    338 ;	snake_game.c: 204: waitForLo(&SPI->SR, 0x80);  /* Wait while SPI is busy transmitting data */
      0000DC                        339 00104$:
                                    340 ;	snake_game.c: 205: SET_COMMAND;
      0000DC AE 50 0A         [ 2]  341 	ldw	x, #0x500a
      0000DF F6               [ 1]  342 	ld	a, (x)
      0000E0 A4 EF            [ 1]  343 	and	a, #0xef
      0000E2 F7               [ 1]  344 	ld	(x), a
                                    345 ;	snake_game.c: 206: SPI->DR = (Y_address & 0x07) | 0x40;
      0000E3 7B 03            [ 1]  346 	ld	a, (0x03, sp)
      0000E5 A4 07            [ 1]  347 	and	a, #0x07
      0000E7 AA 40            [ 1]  348 	or	a, #0x40
      0000E9 AE 52 04         [ 2]  349 	ldw	x, #0x5204
      0000EC F7               [ 1]  350 	ld	(x), a
      0000ED 81               [ 4]  351 	ret
                                    352 ;	snake_game.c: 209: void writeDataFast(uint8_t data)
                                    353 ;	-----------------------------------------
                                    354 ;	 function writeDataFast
                                    355 ;	-----------------------------------------
      0000EE                        356 _writeDataFast:
                                    357 ;	snake_game.c: 159: while(*reg & mask)
      0000EE                        358 00101$:
      0000EE AE 52 03         [ 2]  359 	ldw	x, #0x5203
      0000F1 F6               [ 1]  360 	ld	a, (x)
      0000F2 48               [ 1]  361 	sll	a
      0000F3 24 03            [ 1]  362 	jrnc	00104$
                                    363 ;	snake_game.c: 160: __asm__("nop");
      0000F5 9D               [ 1]  364 	nop
      0000F6 20 F6            [ 2]  365 	jra	00101$
                                    366 ;	snake_game.c: 211: waitForLo(&SPI->SR, 0x80);  /* Wait while SPI is busy transmitting data */
      0000F8                        367 00104$:
                                    368 ;	snake_game.c: 212: SET_DATA;
      0000F8 AE 50 0A         [ 2]  369 	ldw	x, #0x500a
      0000FB F6               [ 1]  370 	ld	a, (x)
      0000FC AA 10            [ 1]  371 	or	a, #0x10
      0000FE F7               [ 1]  372 	ld	(x), a
                                    373 ;	snake_game.c: 213: SPI->DR = data;
      0000FF AE 52 04         [ 2]  374 	ldw	x, #0x5204
      000102 7B 03            [ 1]  375 	ld	a, (0x03, sp)
      000104 F7               [ 1]  376 	ld	(x), a
      000105 81               [ 4]  377 	ret
                                    378 ;	snake_game.c: 216: void writeData(uint8_t data)
                                    379 ;	-----------------------------------------
                                    380 ;	 function writeData
                                    381 ;	-----------------------------------------
      000106                        382 _writeData:
      000106 52 04            [ 2]  383 	sub	sp, #4
                                    384 ;	snake_game.c: 218: LCD_RAM[LCD_X][LCD_Y] = data;
      000108 AEr00r00         [ 2]  385 	ldw	x, #_LCD_RAM+0
      00010B 1F 01            [ 2]  386 	ldw	(0x01, sp), x
      00010D C6u00u00         [ 1]  387 	ld	a, _LCD_X+0
      000110 97               [ 1]  388 	ld	xl, a
      000111 A6 06            [ 1]  389 	ld	a, #0x06
      000113 42               [ 4]  390 	mul	x, a
      000114 72 FB 01         [ 2]  391 	addw	x, (0x01, sp)
      000117 1F 03            [ 2]  392 	ldw	(0x03, sp), x
      000119 C6u00u01         [ 1]  393 	ld	a, _LCD_Y+0
      00011C 5F               [ 1]  394 	clrw	x
      00011D 97               [ 1]  395 	ld	xl, a
      00011E 72 FB 03         [ 2]  396 	addw	x, (0x03, sp)
      000121 7B 07            [ 1]  397 	ld	a, (0x07, sp)
      000123 F7               [ 1]  398 	ld	(x), a
                                    399 ;	snake_game.c: 219: LCD_X++;
      000124 72 5Cu00u00      [ 1]  400 	inc	_LCD_X+0
                                    401 ;	snake_game.c: 220: if( LCD_X > 83 ){
      000128 C6u00u00         [ 1]  402 	ld	a, _LCD_X+0
      00012B A1 53            [ 1]  403 	cp	a, #0x53
      00012D 23 13            [ 2]  404 	jrule	00105$
                                    405 ;	snake_game.c: 221: LCD_X = 0;
      00012F 72 5Fu00u00      [ 1]  406 	clr	_LCD_X+0
                                    407 ;	snake_game.c: 222: LCD_Y++;
      000133 72 5Cu00u01      [ 1]  408 	inc	_LCD_Y+0
                                    409 ;	snake_game.c: 223: if( LCD_Y > 5)
      000137 C6u00u01         [ 1]  410 	ld	a, _LCD_Y+0
      00013A A1 05            [ 1]  411 	cp	a, #0x05
      00013C 23 04            [ 2]  412 	jrule	00105$
                                    413 ;	snake_game.c: 224: LCD_Y = 0;
      00013E 72 5Fu00u01      [ 1]  414 	clr	_LCD_Y+0
                                    415 ;	snake_game.c: 159: while(*reg & mask)
      000142                        416 00105$:
      000142 AE 52 03         [ 2]  417 	ldw	x, #0x5203
      000145 F6               [ 1]  418 	ld	a, (x)
      000146 48               [ 1]  419 	sll	a
      000147 24 03            [ 1]  420 	jrnc	00108$
                                    421 ;	snake_game.c: 160: __asm__("nop");
      000149 9D               [ 1]  422 	nop
      00014A 20 F6            [ 2]  423 	jra	00105$
                                    424 ;	snake_game.c: 226: waitForLo(&SPI->SR, 0x80);  /* Wait while SPI is busy transmitting data */
      00014C                        425 00108$:
                                    426 ;	snake_game.c: 227: SET_DATA;
      00014C AE 50 0A         [ 2]  427 	ldw	x, #0x500a
      00014F F6               [ 1]  428 	ld	a, (x)
      000150 AA 10            [ 1]  429 	or	a, #0x10
      000152 F7               [ 1]  430 	ld	(x), a
                                    431 ;	snake_game.c: 228: SPI->DR = data;
      000153 AE 52 04         [ 2]  432 	ldw	x, #0x5204
      000156 7B 07            [ 1]  433 	ld	a, (0x07, sp)
      000158 F7               [ 1]  434 	ld	(x), a
      000159 5B 04            [ 2]  435 	addw	sp, #4
      00015B 81               [ 4]  436 	ret
                                    437 ;	snake_game.c: 231: void refreshBlock(uint8_t x, uint8_t y)
                                    438 ;	-----------------------------------------
                                    439 ;	 function refreshBlock
                                    440 ;	-----------------------------------------
      00015C                        441 _refreshBlock:
      00015C 52 04            [ 2]  442 	sub	sp, #4
                                    443 ;	snake_game.c: 233: gotoX(x);
      00015E 7B 07            [ 1]  444 	ld	a, (0x07, sp)
      000160 88               [ 1]  445 	push	a
      000161 CDr00rAE         [ 4]  446 	call	_gotoX
      000164 84               [ 1]  447 	pop	a
                                    448 ;	snake_game.c: 234: gotoY(y);
      000165 7B 08            [ 1]  449 	ld	a, (0x08, sp)
      000167 88               [ 1]  450 	push	a
      000168 CDr00rCD         [ 4]  451 	call	_gotoY
      00016B 84               [ 1]  452 	pop	a
                                    453 ;	snake_game.c: 235: writeDataFast(LCD_RAM[LCD_X][LCD_Y]);
      00016C AEr00r00         [ 2]  454 	ldw	x, #_LCD_RAM+0
      00016F 1F 03            [ 2]  455 	ldw	(0x03, sp), x
      000171 C6u00u00         [ 1]  456 	ld	a, _LCD_X+0
      000174 97               [ 1]  457 	ld	xl, a
      000175 A6 06            [ 1]  458 	ld	a, #0x06
      000177 42               [ 4]  459 	mul	x, a
      000178 72 FB 03         [ 2]  460 	addw	x, (0x03, sp)
      00017B 1F 01            [ 2]  461 	ldw	(0x01, sp), x
      00017D C6u00u01         [ 1]  462 	ld	a, _LCD_Y+0
      000180 5F               [ 1]  463 	clrw	x
      000181 97               [ 1]  464 	ld	xl, a
      000182 72 FB 01         [ 2]  465 	addw	x, (0x01, sp)
      000185 F6               [ 1]  466 	ld	a, (x)
      000186 88               [ 1]  467 	push	a
      000187 CDr00rEE         [ 4]  468 	call	_writeDataFast
      00018A 84               [ 1]  469 	pop	a
      00018B 5B 04            [ 2]  470 	addw	sp, #4
      00018D 81               [ 4]  471 	ret
                                    472 ;	snake_game.c: 238: void refreshSnakeTile(uint8_t x, uint8_t y)
                                    473 ;	-----------------------------------------
                                    474 ;	 function refreshSnakeTile
                                    475 ;	-----------------------------------------
      00018E                        476 _refreshSnakeTile:
      00018E 52 05            [ 2]  477 	sub	sp, #5
                                    478 ;	snake_game.c: 241: uint8_t lcd_tmp_x = x<<2;
      000190 7B 08            [ 1]  479 	ld	a, (0x08, sp)
      000192 48               [ 1]  480 	sll	a
      000193 48               [ 1]  481 	sll	a
      000194 6B 02            [ 1]  482 	ld	(0x02, sp), a
                                    483 ;	snake_game.c: 242: uint8_t lcd_tmp_y = y>>1;
      000196 7B 09            [ 1]  484 	ld	a, (0x09, sp)
      000198 44               [ 1]  485 	srl	a
      000199 6B 01            [ 1]  486 	ld	(0x01, sp), a
                                    487 ;	snake_game.c: 243: gotoX(lcd_tmp_x);
      00019B 7B 02            [ 1]  488 	ld	a, (0x02, sp)
      00019D 88               [ 1]  489 	push	a
      00019E CDr00rAE         [ 4]  490 	call	_gotoX
      0001A1 84               [ 1]  491 	pop	a
                                    492 ;	snake_game.c: 244: gotoY(lcd_tmp_y);
      0001A2 7B 01            [ 1]  493 	ld	a, (0x01, sp)
      0001A4 88               [ 1]  494 	push	a
      0001A5 CDr00rCD         [ 4]  495 	call	_gotoY
      0001A8 84               [ 1]  496 	pop	a
                                    497 ;	snake_game.c: 245: for(i = 0; i < 4; i++)
      0001A9 0F 03            [ 1]  498 	clr	(0x03, sp)
      0001AB                        499 00102$:
                                    500 ;	snake_game.c: 246: writeDataFast(LCD_RAM[lcd_tmp_x + i][lcd_tmp_y]);
      0001AB AEr00r00         [ 2]  501 	ldw	x, #_LCD_RAM+0
      0001AE 1F 04            [ 2]  502 	ldw	(0x04, sp), x
      0001B0 7B 02            [ 1]  503 	ld	a, (0x02, sp)
      0001B2 1B 03            [ 1]  504 	add	a, (0x03, sp)
      0001B4 97               [ 1]  505 	ld	xl, a
      0001B5 A6 06            [ 1]  506 	ld	a, #0x06
      0001B7 42               [ 4]  507 	mul	x, a
      0001B8 72 FB 04         [ 2]  508 	addw	x, (0x04, sp)
      0001BB 9F               [ 1]  509 	ld	a, xl
      0001BC 1B 01            [ 1]  510 	add	a, (0x01, sp)
      0001BE 97               [ 1]  511 	ld	xl, a
      0001BF 9E               [ 1]  512 	ld	a, xh
      0001C0 A9 00            [ 1]  513 	adc	a, #0x00
      0001C2 95               [ 1]  514 	ld	xh, a
      0001C3 F6               [ 1]  515 	ld	a, (x)
      0001C4 88               [ 1]  516 	push	a
      0001C5 CDr00rEE         [ 4]  517 	call	_writeDataFast
      0001C8 84               [ 1]  518 	pop	a
                                    519 ;	snake_game.c: 245: for(i = 0; i < 4; i++)
      0001C9 0C 03            [ 1]  520 	inc	(0x03, sp)
      0001CB 7B 03            [ 1]  521 	ld	a, (0x03, sp)
      0001CD A1 04            [ 1]  522 	cp	a, #0x04
      0001CF 25 DA            [ 1]  523 	jrc	00102$
      0001D1 5B 05            [ 2]  524 	addw	sp, #5
      0001D3 81               [ 4]  525 	ret
                                    526 ;	snake_game.c: 249: void setPixel(uint8_t x, uint8_t y)
                                    527 ;	-----------------------------------------
                                    528 ;	 function setPixel
                                    529 ;	-----------------------------------------
      0001D4                        530 _setPixel:
      0001D4 52 04            [ 2]  531 	sub	sp, #4
                                    532 ;	snake_game.c: 251: uint8_t row = y >> 3;
      0001D6 7B 08            [ 1]  533 	ld	a, (0x08, sp)
      0001D8 44               [ 1]  534 	srl	a
      0001D9 44               [ 1]  535 	srl	a
      0001DA 44               [ 1]  536 	srl	a
      0001DB 6B 02            [ 1]  537 	ld	(0x02, sp), a
                                    538 ;	snake_game.c: 252: uint8_t bit = 0x01 << (y & 0x07);
      0001DD 7B 08            [ 1]  539 	ld	a, (0x08, sp)
      0001DF A4 07            [ 1]  540 	and	a, #0x07
      0001E1 95               [ 1]  541 	ld	xh, a
      0001E2 A6 01            [ 1]  542 	ld	a, #0x01
      0001E4 6B 01            [ 1]  543 	ld	(0x01, sp), a
      0001E6 9E               [ 1]  544 	ld	a, xh
      0001E7 4D               [ 1]  545 	tnz	a
      0001E8 27 05            [ 1]  546 	jreq	00104$
      0001EA                        547 00103$:
      0001EA 08 01            [ 1]  548 	sll	(0x01, sp)
      0001EC 4A               [ 1]  549 	dec	a
      0001ED 26 FB            [ 1]  550 	jrne	00103$
      0001EF                        551 00104$:
                                    552 ;	snake_game.c: 253: gotoX(x);
      0001EF 7B 07            [ 1]  553 	ld	a, (0x07, sp)
      0001F1 88               [ 1]  554 	push	a
      0001F2 CDr00rAE         [ 4]  555 	call	_gotoX
      0001F5 84               [ 1]  556 	pop	a
                                    557 ;	snake_game.c: 254: gotoY(row);
      0001F6 7B 02            [ 1]  558 	ld	a, (0x02, sp)
      0001F8 88               [ 1]  559 	push	a
      0001F9 CDr00rCD         [ 4]  560 	call	_gotoY
      0001FC 84               [ 1]  561 	pop	a
                                    562 ;	snake_game.c: 255: writeData( LCD_RAM[x][row] | bit );
      0001FD AEr00r00         [ 2]  563 	ldw	x, #_LCD_RAM+0
      000200 1F 03            [ 2]  564 	ldw	(0x03, sp), x
      000202 7B 07            [ 1]  565 	ld	a, (0x07, sp)
      000204 97               [ 1]  566 	ld	xl, a
      000205 A6 06            [ 1]  567 	ld	a, #0x06
      000207 42               [ 4]  568 	mul	x, a
      000208 72 FB 03         [ 2]  569 	addw	x, (0x03, sp)
      00020B 9F               [ 1]  570 	ld	a, xl
      00020C 1B 02            [ 1]  571 	add	a, (0x02, sp)
      00020E 97               [ 1]  572 	ld	xl, a
      00020F 9E               [ 1]  573 	ld	a, xh
      000210 A9 00            [ 1]  574 	adc	a, #0x00
      000212 95               [ 1]  575 	ld	xh, a
      000213 F6               [ 1]  576 	ld	a, (x)
      000214 1A 01            [ 1]  577 	or	a, (0x01, sp)
      000216 88               [ 1]  578 	push	a
      000217 CDr01r06         [ 4]  579 	call	_writeData
      00021A 84               [ 1]  580 	pop	a
      00021B 5B 04            [ 2]  581 	addw	sp, #4
      00021D 81               [ 4]  582 	ret
                                    583 ;	snake_game.c: 258: void clrPixel(uint8_t x, uint8_t y)
                                    584 ;	-----------------------------------------
                                    585 ;	 function clrPixel
                                    586 ;	-----------------------------------------
      00021E                        587 _clrPixel:
      00021E 52 07            [ 2]  588 	sub	sp, #7
                                    589 ;	snake_game.c: 260: uint8_t row = y >> 3;
      000220 7B 0B            [ 1]  590 	ld	a, (0x0b, sp)
      000222 44               [ 1]  591 	srl	a
      000223 44               [ 1]  592 	srl	a
      000224 44               [ 1]  593 	srl	a
      000225 6B 02            [ 1]  594 	ld	(0x02, sp), a
                                    595 ;	snake_game.c: 261: uint8_t bit = 1 << (y & 0x07);
      000227 7B 0B            [ 1]  596 	ld	a, (0x0b, sp)
      000229 A4 07            [ 1]  597 	and	a, #0x07
      00022B 95               [ 1]  598 	ld	xh, a
      00022C A6 01            [ 1]  599 	ld	a, #0x01
      00022E 6B 01            [ 1]  600 	ld	(0x01, sp), a
      000230 9E               [ 1]  601 	ld	a, xh
      000231 4D               [ 1]  602 	tnz	a
      000232 27 05            [ 1]  603 	jreq	00104$
      000234                        604 00103$:
      000234 08 01            [ 1]  605 	sll	(0x01, sp)
      000236 4A               [ 1]  606 	dec	a
      000237 26 FB            [ 1]  607 	jrne	00103$
      000239                        608 00104$:
                                    609 ;	snake_game.c: 262: gotoX(x);
      000239 7B 0A            [ 1]  610 	ld	a, (0x0a, sp)
      00023B 88               [ 1]  611 	push	a
      00023C CDr00rAE         [ 4]  612 	call	_gotoX
      00023F 84               [ 1]  613 	pop	a
                                    614 ;	snake_game.c: 263: gotoY(row);
      000240 7B 02            [ 1]  615 	ld	a, (0x02, sp)
      000242 88               [ 1]  616 	push	a
      000243 CDr00rCD         [ 4]  617 	call	_gotoY
      000246 84               [ 1]  618 	pop	a
                                    619 ;	snake_game.c: 264: writeData( LCD_RAM[LCD_X][LCD_Y] & ~bit );
      000247 AEr00r00         [ 2]  620 	ldw	x, #_LCD_RAM+0
      00024A 1F 03            [ 2]  621 	ldw	(0x03, sp), x
      00024C C6u00u00         [ 1]  622 	ld	a, _LCD_X+0
      00024F 97               [ 1]  623 	ld	xl, a
      000250 A6 06            [ 1]  624 	ld	a, #0x06
      000252 42               [ 4]  625 	mul	x, a
      000253 72 FB 03         [ 2]  626 	addw	x, (0x03, sp)
      000256 1F 06            [ 2]  627 	ldw	(0x06, sp), x
      000258 C6u00u01         [ 1]  628 	ld	a, _LCD_Y+0
      00025B 5F               [ 1]  629 	clrw	x
      00025C 97               [ 1]  630 	ld	xl, a
      00025D 72 FB 06         [ 2]  631 	addw	x, (0x06, sp)
      000260 7B 01            [ 1]  632 	ld	a, (0x01, sp)
      000262 43               [ 1]  633 	cpl	a
      000263 6B 05            [ 1]  634 	ld	(0x05, sp), a
      000265 F6               [ 1]  635 	ld	a, (x)
      000266 14 05            [ 1]  636 	and	a, (0x05, sp)
      000268 88               [ 1]  637 	push	a
      000269 CDr01r06         [ 4]  638 	call	_writeData
      00026C 84               [ 1]  639 	pop	a
      00026D 5B 07            [ 2]  640 	addw	sp, #7
      00026F 81               [ 4]  641 	ret
                                    642 ;	snake_game.c: 267: uint8_t ADCread(uint8_t channel)
                                    643 ;	-----------------------------------------
                                    644 ;	 function ADCread
                                    645 ;	-----------------------------------------
      000270                        646 _ADCread:
      000270 88               [ 1]  647 	push	a
                                    648 ;	snake_game.c: 269: ADC1->CSR &=~ 0x0F;
      000271 AE 54 00         [ 2]  649 	ldw	x, #0x5400
      000274 F6               [ 1]  650 	ld	a, (x)
      000275 A4 F0            [ 1]  651 	and	a, #0xf0
      000277 F7               [ 1]  652 	ld	(x), a
                                    653 ;	snake_game.c: 270: ADC1->CSR |= channel & 0x0F;
      000278 AE 54 00         [ 2]  654 	ldw	x, #0x5400
      00027B F6               [ 1]  655 	ld	a, (x)
      00027C 6B 01            [ 1]  656 	ld	(0x01, sp), a
      00027E 7B 04            [ 1]  657 	ld	a, (0x04, sp)
      000280 A4 0F            [ 1]  658 	and	a, #0x0f
      000282 1A 01            [ 1]  659 	or	a, (0x01, sp)
      000284 AE 54 00         [ 2]  660 	ldw	x, #0x5400
      000287 F7               [ 1]  661 	ld	(x), a
                                    662 ;	snake_game.c: 271: ADC1->CR1 |= (1<<0);  /* initiate conversion */
      000288 72 10 54 01      [ 1]  663 	bset	0x5401, #0
                                    664 ;	snake_game.c: 147: while(!(*reg & mask))
      00028C                        665 00101$:
      00028C AE 54 00         [ 2]  666 	ldw	x, #0x5400
      00028F F6               [ 1]  667 	ld	a, (x)
      000290 48               [ 1]  668 	sll	a
      000291 25 03            [ 1]  669 	jrc	00104$
                                    670 ;	snake_game.c: 148: __asm__("nop");
      000293 9D               [ 1]  671 	nop
      000294 20 F6            [ 2]  672 	jra	00101$
                                    673 ;	snake_game.c: 272: waitForHi( &ADC1->CSR, 1 << 7 );
      000296                        674 00104$:
                                    675 ;	snake_game.c: 273: ADC1->CSR &= ~(1<<7); /* Clear conversion-done flag */
      000296 72 17 54 00      [ 1]  676 	bres	0x5400, #7
                                    677 ;	snake_game.c: 274: return ADC1->DRH;
      00029A AE 54 04         [ 2]  678 	ldw	x, #0x5404
      00029D F6               [ 1]  679 	ld	a, (x)
      00029E 5B 01            [ 2]  680 	addw	sp, #1
      0002A0 81               [ 4]  681 	ret
                                    682 ;	snake_game.c: 295: void setSnakeTile(uint8_t x, uint8_t y, enum Snake_tile tileID)
                                    683 ;	-----------------------------------------
                                    684 ;	 function setSnakeTile
                                    685 ;	-----------------------------------------
      0002A1                        686 _setSnakeTile:
      0002A1 52 42            [ 2]  687 	sub	sp, #66
                                    688 ;	snake_game.c: 297: uint8_t tmp_x = x << 2;
      0002A3 7B 45            [ 1]  689 	ld	a, (0x45, sp)
      0002A5 48               [ 1]  690 	sll	a
      0002A6 48               [ 1]  691 	sll	a
      0002A7 6B 42            [ 1]  692 	ld	(0x42, sp), a
                                    693 ;	snake_game.c: 298: uint8_t tmp_y = y >> 1;
      0002A9 7B 46            [ 1]  694 	ld	a, (0x46, sp)
      0002AB 44               [ 1]  695 	srl	a
      0002AC 6B 01            [ 1]  696 	ld	(0x01, sp), a
                                    697 ;	snake_game.c: 300: Snake_array[x][y] = tileID;
      0002AE AEr00r03         [ 2]  698 	ldw	x, #_Snake_array+0
      0002B1 1F 25            [ 2]  699 	ldw	(0x25, sp), x
      0002B3 7B 45            [ 1]  700 	ld	a, (0x45, sp)
      0002B5 97               [ 1]  701 	ld	xl, a
      0002B6 A6 0A            [ 1]  702 	ld	a, #0x0a
      0002B8 42               [ 4]  703 	mul	x, a
      0002B9 72 FB 25         [ 2]  704 	addw	x, (0x25, sp)
      0002BC 7B 46            [ 1]  705 	ld	a, (0x46, sp)
      0002BE 6B 2C            [ 1]  706 	ld	(0x2c, sp), a
      0002C0 9F               [ 1]  707 	ld	a, xl
      0002C1 1B 2C            [ 1]  708 	add	a, (0x2c, sp)
      0002C3 97               [ 1]  709 	ld	xl, a
      0002C4 9E               [ 1]  710 	ld	a, xh
      0002C5 A9 00            [ 1]  711 	adc	a, #0x00
      0002C7 95               [ 1]  712 	ld	xh, a
      0002C8 7B 47            [ 1]  713 	ld	a, (0x47, sp)
      0002CA F7               [ 1]  714 	ld	(x), a
                                    715 ;	snake_game.c: 303: LCD_RAM[tmp_x][tmp_y] &= ~0xF0;
      0002CB 7B 42            [ 1]  716 	ld	a, (0x42, sp)
      0002CD 97               [ 1]  717 	ld	xl, a
      0002CE A6 06            [ 1]  718 	ld	a, #0x06
      0002D0 42               [ 4]  719 	mul	x, a
      0002D1 1F 2E            [ 2]  720 	ldw	(0x2e, sp), x
                                    721 ;	snake_game.c: 304: LCD_RAM[tmp_x][tmp_y] |= snake_tiles[tileID][0] & 0xF0;
      0002D3 5F               [ 1]  722 	clrw	x
      0002D4 7B 47            [ 1]  723 	ld	a, (0x47, sp)
      0002D6 97               [ 1]  724 	ld	xl, a
                                    725 ;	snake_game.c: 305: tmp_x++;
      0002D7 7B 42            [ 1]  726 	ld	a, (0x42, sp)
      0002D9 4C               [ 1]  727 	inc	a
      0002DA 6B 2D            [ 1]  728 	ld	(0x2d, sp), a
                                    729 ;	snake_game.c: 304: LCD_RAM[tmp_x][tmp_y] |= snake_tiles[tileID][0] & 0xF0;
      0002DC 58               [ 2]  730 	sllw	x
      0002DD 1F 2A            [ 2]  731 	ldw	(0x2a, sp), x
                                    732 ;	snake_game.c: 302: if( y & 0x01 ){ /* Top tile */
      0002DF 7B 2C            [ 1]  733 	ld	a, (0x2c, sp)
      0002E1 44               [ 1]  734 	srl	a
      0002E2 25 03            [ 1]  735 	jrc	00110$
      0002E4 CCr04r62         [ 2]  736 	jp	00102$
      0002E7                        737 00110$:
                                    738 ;	snake_game.c: 303: LCD_RAM[tmp_x][tmp_y] &= ~0xF0;
      0002E7 AEr00r00         [ 2]  739 	ldw	x, #_LCD_RAM+0
      0002EA 72 FB 2E         [ 2]  740 	addw	x, (0x2e, sp)
      0002ED 9F               [ 1]  741 	ld	a, xl
      0002EE 1B 01            [ 1]  742 	add	a, (0x01, sp)
      0002F0 90 97            [ 1]  743 	ld	yl, a
      0002F2 9E               [ 1]  744 	ld	a, xh
      0002F3 A9 00            [ 1]  745 	adc	a, #0x00
      0002F5 90 95            [ 1]  746 	ld	yh, a
      0002F7 AEr00r00         [ 2]  747 	ldw	x, #_LCD_RAM+0
      0002FA 72 FB 2E         [ 2]  748 	addw	x, (0x2e, sp)
      0002FD 9F               [ 1]  749 	ld	a, xl
      0002FE 1B 01            [ 1]  750 	add	a, (0x01, sp)
      000300 97               [ 1]  751 	ld	xl, a
      000301 9E               [ 1]  752 	ld	a, xh
      000302 A9 00            [ 1]  753 	adc	a, #0x00
      000304 95               [ 1]  754 	ld	xh, a
      000305 F6               [ 1]  755 	ld	a, (x)
      000306 A4 0F            [ 1]  756 	and	a, #0x0f
      000308 90 F7            [ 1]  757 	ld	(y), a
                                    758 ;	snake_game.c: 304: LCD_RAM[tmp_x][tmp_y] |= snake_tiles[tileID][0] & 0xF0;
      00030A AEr00r00         [ 2]  759 	ldw	x, #_LCD_RAM+0
      00030D 72 FB 2E         [ 2]  760 	addw	x, (0x2e, sp)
      000310 9F               [ 1]  761 	ld	a, xl
      000311 1B 01            [ 1]  762 	add	a, (0x01, sp)
      000313 6B 29            [ 1]  763 	ld	(0x29, sp), a
      000315 9E               [ 1]  764 	ld	a, xh
      000316 A9 00            [ 1]  765 	adc	a, #0x00
      000318 6B 28            [ 1]  766 	ld	(0x28, sp), a
      00031A AEr00r00         [ 2]  767 	ldw	x, #_LCD_RAM+0
      00031D 72 FB 2E         [ 2]  768 	addw	x, (0x2e, sp)
      000320 9F               [ 1]  769 	ld	a, xl
      000321 1B 01            [ 1]  770 	add	a, (0x01, sp)
      000323 97               [ 1]  771 	ld	xl, a
      000324 9E               [ 1]  772 	ld	a, xh
      000325 A9 00            [ 1]  773 	adc	a, #0x00
      000327 95               [ 1]  774 	ld	xh, a
      000328 90 AEr0Cr8D      [ 2]  775 	ldw	y, #_snake_tiles+0
      00032C 72 F9 2A         [ 2]  776 	addw	y, (0x2a, sp)
      00032F 90 F6            [ 1]  777 	ld	a, (y)
      000331 A4 F0            [ 1]  778 	and	a, #0xf0
      000333 6B 27            [ 1]  779 	ld	(0x27, sp), a
      000335 F6               [ 1]  780 	ld	a, (x)
      000336 1A 27            [ 1]  781 	or	a, (0x27, sp)
      000338 1E 28            [ 2]  782 	ldw	x, (0x28, sp)
      00033A F7               [ 1]  783 	ld	(x), a
                                    784 ;	snake_game.c: 305: tmp_x++;
      00033B 7B 2D            [ 1]  785 	ld	a, (0x2d, sp)
      00033D 6B 41            [ 1]  786 	ld	(0x41, sp), a
                                    787 ;	snake_game.c: 306: LCD_RAM[tmp_x][tmp_y] &= ~0xF0;
      00033F AEr00r00         [ 2]  788 	ldw	x, #_LCD_RAM+0
      000342 89               [ 2]  789 	pushw	x
      000343 7B 43            [ 1]  790 	ld	a, (0x43, sp)
      000345 97               [ 1]  791 	ld	xl, a
      000346 A6 06            [ 1]  792 	ld	a, #0x06
      000348 42               [ 4]  793 	mul	x, a
      000349 1F 41            [ 2]  794 	ldw	(0x41, sp), x
      00034B 85               [ 2]  795 	popw	x
      00034C 72 FB 3F         [ 2]  796 	addw	x, (0x3f, sp)
      00034F 9F               [ 1]  797 	ld	a, xl
      000350 1B 01            [ 1]  798 	add	a, (0x01, sp)
      000352 6B 3E            [ 1]  799 	ld	(0x3e, sp), a
      000354 9E               [ 1]  800 	ld	a, xh
      000355 A9 00            [ 1]  801 	adc	a, #0x00
      000357 6B 3D            [ 1]  802 	ld	(0x3d, sp), a
      000359 AEr00r00         [ 2]  803 	ldw	x, #_LCD_RAM+0
      00035C 72 FB 3F         [ 2]  804 	addw	x, (0x3f, sp)
      00035F 9F               [ 1]  805 	ld	a, xl
      000360 1B 01            [ 1]  806 	add	a, (0x01, sp)
      000362 97               [ 1]  807 	ld	xl, a
      000363 9E               [ 1]  808 	ld	a, xh
      000364 A9 00            [ 1]  809 	adc	a, #0x00
      000366 95               [ 1]  810 	ld	xh, a
      000367 F6               [ 1]  811 	ld	a, (x)
      000368 A4 0F            [ 1]  812 	and	a, #0x0f
      00036A 1E 3D            [ 2]  813 	ldw	x, (0x3d, sp)
      00036C F7               [ 1]  814 	ld	(x), a
                                    815 ;	snake_game.c: 307: LCD_RAM[tmp_x][tmp_y] |= snake_tiles[tileID][0] << 4;
      00036D AEr00r00         [ 2]  816 	ldw	x, #_LCD_RAM+0
      000370 72 FB 3F         [ 2]  817 	addw	x, (0x3f, sp)
      000373 9F               [ 1]  818 	ld	a, xl
      000374 1B 01            [ 1]  819 	add	a, (0x01, sp)
      000376 6B 3C            [ 1]  820 	ld	(0x3c, sp), a
      000378 9E               [ 1]  821 	ld	a, xh
      000379 A9 00            [ 1]  822 	adc	a, #0x00
      00037B 6B 3B            [ 1]  823 	ld	(0x3b, sp), a
      00037D AEr00r00         [ 2]  824 	ldw	x, #_LCD_RAM+0
      000380 72 FB 3F         [ 2]  825 	addw	x, (0x3f, sp)
      000383 9F               [ 1]  826 	ld	a, xl
      000384 1B 01            [ 1]  827 	add	a, (0x01, sp)
      000386 97               [ 1]  828 	ld	xl, a
      000387 9E               [ 1]  829 	ld	a, xh
      000388 A9 00            [ 1]  830 	adc	a, #0x00
      00038A 95               [ 1]  831 	ld	xh, a
      00038B 90 F6            [ 1]  832 	ld	a, (y)
      00038D 48               [ 1]  833 	sll	a
      00038E 48               [ 1]  834 	sll	a
      00038F 48               [ 1]  835 	sll	a
      000390 48               [ 1]  836 	sll	a
      000391 6B 3A            [ 1]  837 	ld	(0x3a, sp), a
      000393 F6               [ 1]  838 	ld	a, (x)
      000394 1A 3A            [ 1]  839 	or	a, (0x3a, sp)
      000396 1E 3B            [ 2]  840 	ldw	x, (0x3b, sp)
      000398 F7               [ 1]  841 	ld	(x), a
                                    842 ;	snake_game.c: 308: tmp_x++;
      000399 7B 41            [ 1]  843 	ld	a, (0x41, sp)
      00039B 4C               [ 1]  844 	inc	a
      00039C 6B 39            [ 1]  845 	ld	(0x39, sp), a
      00039E 7B 39            [ 1]  846 	ld	a, (0x39, sp)
      0003A0 6B 38            [ 1]  847 	ld	(0x38, sp), a
                                    848 ;	snake_game.c: 309: LCD_RAM[tmp_x][tmp_y] &= ~0xF0;
      0003A2 AEr00r00         [ 2]  849 	ldw	x, #_LCD_RAM+0
      0003A5 89               [ 2]  850 	pushw	x
      0003A6 7B 3A            [ 1]  851 	ld	a, (0x3a, sp)
      0003A8 97               [ 1]  852 	ld	xl, a
      0003A9 A6 06            [ 1]  853 	ld	a, #0x06
      0003AB 42               [ 4]  854 	mul	x, a
      0003AC 1F 38            [ 2]  855 	ldw	(0x38, sp), x
      0003AE 85               [ 2]  856 	popw	x
      0003AF 72 FB 36         [ 2]  857 	addw	x, (0x36, sp)
      0003B2 9F               [ 1]  858 	ld	a, xl
      0003B3 1B 01            [ 1]  859 	add	a, (0x01, sp)
      0003B5 6B 35            [ 1]  860 	ld	(0x35, sp), a
      0003B7 9E               [ 1]  861 	ld	a, xh
      0003B8 A9 00            [ 1]  862 	adc	a, #0x00
      0003BA 6B 34            [ 1]  863 	ld	(0x34, sp), a
      0003BC AEr00r00         [ 2]  864 	ldw	x, #_LCD_RAM+0
      0003BF 72 FB 36         [ 2]  865 	addw	x, (0x36, sp)
      0003C2 9F               [ 1]  866 	ld	a, xl
      0003C3 1B 01            [ 1]  867 	add	a, (0x01, sp)
      0003C5 97               [ 1]  868 	ld	xl, a
      0003C6 9E               [ 1]  869 	ld	a, xh
      0003C7 A9 00            [ 1]  870 	adc	a, #0x00
      0003C9 95               [ 1]  871 	ld	xh, a
      0003CA F6               [ 1]  872 	ld	a, (x)
      0003CB A4 0F            [ 1]  873 	and	a, #0x0f
      0003CD 1E 34            [ 2]  874 	ldw	x, (0x34, sp)
      0003CF F7               [ 1]  875 	ld	(x), a
                                    876 ;	snake_game.c: 310: LCD_RAM[tmp_x][tmp_y] |= snake_tiles[tileID][1] & 0xF0;
      0003D0 AEr00r00         [ 2]  877 	ldw	x, #_LCD_RAM+0
      0003D3 72 FB 36         [ 2]  878 	addw	x, (0x36, sp)
      0003D6 9F               [ 1]  879 	ld	a, xl
      0003D7 1B 01            [ 1]  880 	add	a, (0x01, sp)
      0003D9 6B 33            [ 1]  881 	ld	(0x33, sp), a
      0003DB 9E               [ 1]  882 	ld	a, xh
      0003DC A9 00            [ 1]  883 	adc	a, #0x00
      0003DE 6B 32            [ 1]  884 	ld	(0x32, sp), a
      0003E0 AEr00r00         [ 2]  885 	ldw	x, #_LCD_RAM+0
      0003E3 72 FB 36         [ 2]  886 	addw	x, (0x36, sp)
      0003E6 9F               [ 1]  887 	ld	a, xl
      0003E7 1B 01            [ 1]  888 	add	a, (0x01, sp)
      0003E9 97               [ 1]  889 	ld	xl, a
      0003EA 9E               [ 1]  890 	ld	a, xh
      0003EB A9 00            [ 1]  891 	adc	a, #0x00
      0003ED 95               [ 1]  892 	ld	xh, a
      0003EE 90 5C            [ 2]  893 	incw	y
      0003F0 90 F6            [ 1]  894 	ld	a, (y)
      0003F2 A4 F0            [ 1]  895 	and	a, #0xf0
      0003F4 6B 31            [ 1]  896 	ld	(0x31, sp), a
      0003F6 F6               [ 1]  897 	ld	a, (x)
      0003F7 1A 31            [ 1]  898 	or	a, (0x31, sp)
      0003F9 1E 32            [ 2]  899 	ldw	x, (0x32, sp)
      0003FB F7               [ 1]  900 	ld	(x), a
                                    901 ;	snake_game.c: 311: tmp_x++;    
      0003FC 7B 38            [ 1]  902 	ld	a, (0x38, sp)
      0003FE 4C               [ 1]  903 	inc	a
      0003FF 6B 30            [ 1]  904 	ld	(0x30, sp), a
      000401 7B 30            [ 1]  905 	ld	a, (0x30, sp)
      000403 6B 02            [ 1]  906 	ld	(0x02, sp), a
                                    907 ;	snake_game.c: 312: LCD_RAM[tmp_x][tmp_y] &= ~0xF0;
      000405 AEr00r00         [ 2]  908 	ldw	x, #_LCD_RAM+0
      000408 89               [ 2]  909 	pushw	x
      000409 7B 04            [ 1]  910 	ld	a, (0x04, sp)
      00040B 97               [ 1]  911 	ld	xl, a
      00040C A6 06            [ 1]  912 	ld	a, #0x06
      00040E 42               [ 4]  913 	mul	x, a
      00040F 1F 25            [ 2]  914 	ldw	(0x25, sp), x
      000411 85               [ 2]  915 	popw	x
      000412 72 FB 23         [ 2]  916 	addw	x, (0x23, sp)
      000415 9F               [ 1]  917 	ld	a, xl
      000416 1B 01            [ 1]  918 	add	a, (0x01, sp)
      000418 6B 22            [ 1]  919 	ld	(0x22, sp), a
      00041A 9E               [ 1]  920 	ld	a, xh
      00041B A9 00            [ 1]  921 	adc	a, #0x00
      00041D 6B 21            [ 1]  922 	ld	(0x21, sp), a
      00041F AEr00r00         [ 2]  923 	ldw	x, #_LCD_RAM+0
      000422 72 FB 23         [ 2]  924 	addw	x, (0x23, sp)
      000425 9F               [ 1]  925 	ld	a, xl
      000426 1B 01            [ 1]  926 	add	a, (0x01, sp)
      000428 97               [ 1]  927 	ld	xl, a
      000429 9E               [ 1]  928 	ld	a, xh
      00042A A9 00            [ 1]  929 	adc	a, #0x00
      00042C 95               [ 1]  930 	ld	xh, a
      00042D F6               [ 1]  931 	ld	a, (x)
      00042E A4 0F            [ 1]  932 	and	a, #0x0f
      000430 1E 21            [ 2]  933 	ldw	x, (0x21, sp)
      000432 F7               [ 1]  934 	ld	(x), a
                                    935 ;	snake_game.c: 313: LCD_RAM[tmp_x][tmp_y] |= snake_tiles[tileID][1] << 4;
      000433 AEr00r00         [ 2]  936 	ldw	x, #_LCD_RAM+0
      000436 72 FB 23         [ 2]  937 	addw	x, (0x23, sp)
      000439 9F               [ 1]  938 	ld	a, xl
      00043A 1B 01            [ 1]  939 	add	a, (0x01, sp)
      00043C 6B 20            [ 1]  940 	ld	(0x20, sp), a
      00043E 9E               [ 1]  941 	ld	a, xh
      00043F A9 00            [ 1]  942 	adc	a, #0x00
      000441 6B 1F            [ 1]  943 	ld	(0x1f, sp), a
      000443 AEr00r00         [ 2]  944 	ldw	x, #_LCD_RAM+0
      000446 72 FB 23         [ 2]  945 	addw	x, (0x23, sp)
      000449 9F               [ 1]  946 	ld	a, xl
      00044A 1B 01            [ 1]  947 	add	a, (0x01, sp)
      00044C 97               [ 1]  948 	ld	xl, a
      00044D 9E               [ 1]  949 	ld	a, xh
      00044E A9 00            [ 1]  950 	adc	a, #0x00
      000450 95               [ 1]  951 	ld	xh, a
      000451 90 F6            [ 1]  952 	ld	a, (y)
      000453 48               [ 1]  953 	sll	a
      000454 48               [ 1]  954 	sll	a
      000455 48               [ 1]  955 	sll	a
      000456 48               [ 1]  956 	sll	a
      000457 6B 1E            [ 1]  957 	ld	(0x1e, sp), a
      000459 F6               [ 1]  958 	ld	a, (x)
      00045A 1A 1E            [ 1]  959 	or	a, (0x1e, sp)
      00045C 1E 1F            [ 2]  960 	ldw	x, (0x1f, sp)
      00045E F7               [ 1]  961 	ld	(x), a
      00045F CCr05rD1         [ 2]  962 	jp	00103$
      000462                        963 00102$:
                                    964 ;	snake_game.c: 316: LCD_RAM[tmp_x][tmp_y] &= ~0x0F;
      000462 AEr00r00         [ 2]  965 	ldw	x, #_LCD_RAM+0
      000465 72 FB 2E         [ 2]  966 	addw	x, (0x2e, sp)
      000468 9F               [ 1]  967 	ld	a, xl
      000469 1B 01            [ 1]  968 	add	a, (0x01, sp)
      00046B 90 97            [ 1]  969 	ld	yl, a
      00046D 9E               [ 1]  970 	ld	a, xh
      00046E A9 00            [ 1]  971 	adc	a, #0x00
      000470 90 95            [ 1]  972 	ld	yh, a
      000472 AEr00r00         [ 2]  973 	ldw	x, #_LCD_RAM+0
      000475 72 FB 2E         [ 2]  974 	addw	x, (0x2e, sp)
      000478 9F               [ 1]  975 	ld	a, xl
      000479 1B 01            [ 1]  976 	add	a, (0x01, sp)
      00047B 97               [ 1]  977 	ld	xl, a
      00047C 9E               [ 1]  978 	ld	a, xh
      00047D A9 00            [ 1]  979 	adc	a, #0x00
      00047F 95               [ 1]  980 	ld	xh, a
      000480 F6               [ 1]  981 	ld	a, (x)
      000481 A4 F0            [ 1]  982 	and	a, #0xf0
      000483 90 F7            [ 1]  983 	ld	(y), a
                                    984 ;	snake_game.c: 317: LCD_RAM[tmp_x][tmp_y] |= snake_tiles[tileID][0] >> 4;
      000485 AEr00r00         [ 2]  985 	ldw	x, #_LCD_RAM+0
      000488 72 FB 2E         [ 2]  986 	addw	x, (0x2e, sp)
      00048B 9F               [ 1]  987 	ld	a, xl
      00048C 1B 01            [ 1]  988 	add	a, (0x01, sp)
      00048E 6B 1D            [ 1]  989 	ld	(0x1d, sp), a
      000490 9E               [ 1]  990 	ld	a, xh
      000491 A9 00            [ 1]  991 	adc	a, #0x00
      000493 6B 1C            [ 1]  992 	ld	(0x1c, sp), a
      000495 AEr00r00         [ 2]  993 	ldw	x, #_LCD_RAM+0
      000498 72 FB 2E         [ 2]  994 	addw	x, (0x2e, sp)
      00049B 9F               [ 1]  995 	ld	a, xl
      00049C 1B 01            [ 1]  996 	add	a, (0x01, sp)
      00049E 97               [ 1]  997 	ld	xl, a
      00049F 9E               [ 1]  998 	ld	a, xh
      0004A0 A9 00            [ 1]  999 	adc	a, #0x00
      0004A2 95               [ 1] 1000 	ld	xh, a
      0004A3 90 AEr0Cr8D      [ 2] 1001 	ldw	y, #_snake_tiles+0
      0004A7 72 F9 2A         [ 2] 1002 	addw	y, (0x2a, sp)
      0004AA 90 F6            [ 1] 1003 	ld	a, (y)
      0004AC 4E               [ 1] 1004 	swap	a
      0004AD A4 0F            [ 1] 1005 	and	a, #0x0f
      0004AF 6B 1B            [ 1] 1006 	ld	(0x1b, sp), a
      0004B1 F6               [ 1] 1007 	ld	a, (x)
      0004B2 1A 1B            [ 1] 1008 	or	a, (0x1b, sp)
      0004B4 1E 1C            [ 2] 1009 	ldw	x, (0x1c, sp)
      0004B6 F7               [ 1] 1010 	ld	(x), a
                                   1011 ;	snake_game.c: 318: tmp_x++;
      0004B7 7B 2D            [ 1] 1012 	ld	a, (0x2d, sp)
      0004B9 6B 1A            [ 1] 1013 	ld	(0x1a, sp), a
                                   1014 ;	snake_game.c: 319: LCD_RAM[tmp_x][tmp_y] &= ~0x0F;
      0004BB AEr00r00         [ 2] 1015 	ldw	x, #_LCD_RAM+0
      0004BE 89               [ 2] 1016 	pushw	x
      0004BF 7B 1C            [ 1] 1017 	ld	a, (0x1c, sp)
      0004C1 97               [ 1] 1018 	ld	xl, a
      0004C2 A6 06            [ 1] 1019 	ld	a, #0x06
      0004C4 42               [ 4] 1020 	mul	x, a
      0004C5 1F 1A            [ 2] 1021 	ldw	(0x1a, sp), x
      0004C7 85               [ 2] 1022 	popw	x
      0004C8 72 FB 18         [ 2] 1023 	addw	x, (0x18, sp)
      0004CB 9F               [ 1] 1024 	ld	a, xl
      0004CC 1B 01            [ 1] 1025 	add	a, (0x01, sp)
      0004CE 6B 17            [ 1] 1026 	ld	(0x17, sp), a
      0004D0 9E               [ 1] 1027 	ld	a, xh
      0004D1 A9 00            [ 1] 1028 	adc	a, #0x00
      0004D3 6B 16            [ 1] 1029 	ld	(0x16, sp), a
      0004D5 AEr00r00         [ 2] 1030 	ldw	x, #_LCD_RAM+0
      0004D8 72 FB 18         [ 2] 1031 	addw	x, (0x18, sp)
      0004DB 9F               [ 1] 1032 	ld	a, xl
      0004DC 1B 01            [ 1] 1033 	add	a, (0x01, sp)
      0004DE 97               [ 1] 1034 	ld	xl, a
      0004DF 9E               [ 1] 1035 	ld	a, xh
      0004E0 A9 00            [ 1] 1036 	adc	a, #0x00
      0004E2 95               [ 1] 1037 	ld	xh, a
      0004E3 F6               [ 1] 1038 	ld	a, (x)
      0004E4 A4 F0            [ 1] 1039 	and	a, #0xf0
      0004E6 1E 16            [ 2] 1040 	ldw	x, (0x16, sp)
      0004E8 F7               [ 1] 1041 	ld	(x), a
                                   1042 ;	snake_game.c: 320: LCD_RAM[tmp_x][tmp_y] |= snake_tiles[tileID][0] & 0x0F;
      0004E9 AEr00r00         [ 2] 1043 	ldw	x, #_LCD_RAM+0
      0004EC 72 FB 18         [ 2] 1044 	addw	x, (0x18, sp)
      0004EF 9F               [ 1] 1045 	ld	a, xl
      0004F0 1B 01            [ 1] 1046 	add	a, (0x01, sp)
      0004F2 6B 15            [ 1] 1047 	ld	(0x15, sp), a
      0004F4 9E               [ 1] 1048 	ld	a, xh
      0004F5 A9 00            [ 1] 1049 	adc	a, #0x00
      0004F7 6B 14            [ 1] 1050 	ld	(0x14, sp), a
      0004F9 AEr00r00         [ 2] 1051 	ldw	x, #_LCD_RAM+0
      0004FC 72 FB 18         [ 2] 1052 	addw	x, (0x18, sp)
      0004FF 9F               [ 1] 1053 	ld	a, xl
      000500 1B 01            [ 1] 1054 	add	a, (0x01, sp)
      000502 97               [ 1] 1055 	ld	xl, a
      000503 9E               [ 1] 1056 	ld	a, xh
      000504 A9 00            [ 1] 1057 	adc	a, #0x00
      000506 95               [ 1] 1058 	ld	xh, a
      000507 90 F6            [ 1] 1059 	ld	a, (y)
      000509 A4 0F            [ 1] 1060 	and	a, #0x0f
      00050B 6B 13            [ 1] 1061 	ld	(0x13, sp), a
      00050D F6               [ 1] 1062 	ld	a, (x)
      00050E 1A 13            [ 1] 1063 	or	a, (0x13, sp)
      000510 1E 14            [ 2] 1064 	ldw	x, (0x14, sp)
      000512 F7               [ 1] 1065 	ld	(x), a
                                   1066 ;	snake_game.c: 321: tmp_x++;
      000513 7B 1A            [ 1] 1067 	ld	a, (0x1a, sp)
      000515 4C               [ 1] 1068 	inc	a
      000516 6B 12            [ 1] 1069 	ld	(0x12, sp), a
      000518 7B 12            [ 1] 1070 	ld	a, (0x12, sp)
      00051A 6B 11            [ 1] 1071 	ld	(0x11, sp), a
                                   1072 ;	snake_game.c: 322: LCD_RAM[tmp_x][tmp_y] &= ~0x0F;
      00051C AEr00r00         [ 2] 1073 	ldw	x, #_LCD_RAM+0
      00051F 89               [ 2] 1074 	pushw	x
      000520 7B 13            [ 1] 1075 	ld	a, (0x13, sp)
      000522 97               [ 1] 1076 	ld	xl, a
      000523 A6 06            [ 1] 1077 	ld	a, #0x06
      000525 42               [ 4] 1078 	mul	x, a
      000526 1F 11            [ 2] 1079 	ldw	(0x11, sp), x
      000528 85               [ 2] 1080 	popw	x
      000529 72 FB 0F         [ 2] 1081 	addw	x, (0x0f, sp)
      00052C 9F               [ 1] 1082 	ld	a, xl
      00052D 1B 01            [ 1] 1083 	add	a, (0x01, sp)
      00052F 6B 0E            [ 1] 1084 	ld	(0x0e, sp), a
      000531 9E               [ 1] 1085 	ld	a, xh
      000532 A9 00            [ 1] 1086 	adc	a, #0x00
      000534 6B 0D            [ 1] 1087 	ld	(0x0d, sp), a
      000536 AEr00r00         [ 2] 1088 	ldw	x, #_LCD_RAM+0
      000539 72 FB 0F         [ 2] 1089 	addw	x, (0x0f, sp)
      00053C 9F               [ 1] 1090 	ld	a, xl
      00053D 1B 01            [ 1] 1091 	add	a, (0x01, sp)
      00053F 97               [ 1] 1092 	ld	xl, a
      000540 9E               [ 1] 1093 	ld	a, xh
      000541 A9 00            [ 1] 1094 	adc	a, #0x00
      000543 95               [ 1] 1095 	ld	xh, a
      000544 F6               [ 1] 1096 	ld	a, (x)
      000545 A4 F0            [ 1] 1097 	and	a, #0xf0
      000547 1E 0D            [ 2] 1098 	ldw	x, (0x0d, sp)
      000549 F7               [ 1] 1099 	ld	(x), a
                                   1100 ;	snake_game.c: 323: LCD_RAM[tmp_x][tmp_y] |= snake_tiles[tileID][1] >> 4;
      00054A AEr00r00         [ 2] 1101 	ldw	x, #_LCD_RAM+0
      00054D 72 FB 0F         [ 2] 1102 	addw	x, (0x0f, sp)
      000550 9F               [ 1] 1103 	ld	a, xl
      000551 1B 01            [ 1] 1104 	add	a, (0x01, sp)
      000553 6B 0C            [ 1] 1105 	ld	(0x0c, sp), a
      000555 9E               [ 1] 1106 	ld	a, xh
      000556 A9 00            [ 1] 1107 	adc	a, #0x00
      000558 6B 0B            [ 1] 1108 	ld	(0x0b, sp), a
      00055A AEr00r00         [ 2] 1109 	ldw	x, #_LCD_RAM+0
      00055D 72 FB 0F         [ 2] 1110 	addw	x, (0x0f, sp)
      000560 9F               [ 1] 1111 	ld	a, xl
      000561 1B 01            [ 1] 1112 	add	a, (0x01, sp)
      000563 97               [ 1] 1113 	ld	xl, a
      000564 9E               [ 1] 1114 	ld	a, xh
      000565 A9 00            [ 1] 1115 	adc	a, #0x00
      000567 95               [ 1] 1116 	ld	xh, a
      000568 90 5C            [ 2] 1117 	incw	y
      00056A 90 F6            [ 1] 1118 	ld	a, (y)
      00056C 4E               [ 1] 1119 	swap	a
      00056D A4 0F            [ 1] 1120 	and	a, #0x0f
      00056F 6B 0A            [ 1] 1121 	ld	(0x0a, sp), a
      000571 F6               [ 1] 1122 	ld	a, (x)
      000572 1A 0A            [ 1] 1123 	or	a, (0x0a, sp)
      000574 1E 0B            [ 2] 1124 	ldw	x, (0x0b, sp)
      000576 F7               [ 1] 1125 	ld	(x), a
                                   1126 ;	snake_game.c: 324: tmp_x++;    
      000577 7B 11            [ 1] 1127 	ld	a, (0x11, sp)
      000579 4C               [ 1] 1128 	inc	a
                                   1129 ;	snake_game.c: 325: LCD_RAM[tmp_x][tmp_y] &= ~0x0F;
      00057A AEr00r00         [ 2] 1130 	ldw	x, #_LCD_RAM+0
      00057D 89               [ 2] 1131 	pushw	x
      00057E 41               [ 1] 1132 	exg	a, xl
      00057F A6 06            [ 1] 1133 	ld	a, #0x06
      000581 41               [ 1] 1134 	exg	a, xl
      000582 42               [ 4] 1135 	mul	x, a
      000583 1F 0A            [ 2] 1136 	ldw	(0x0a, sp), x
      000585 85               [ 2] 1137 	popw	x
      000586 72 FB 08         [ 2] 1138 	addw	x, (0x08, sp)
      000589 9F               [ 1] 1139 	ld	a, xl
      00058A 1B 01            [ 1] 1140 	add	a, (0x01, sp)
      00058C 6B 07            [ 1] 1141 	ld	(0x07, sp), a
      00058E 9E               [ 1] 1142 	ld	a, xh
      00058F A9 00            [ 1] 1143 	adc	a, #0x00
      000591 6B 06            [ 1] 1144 	ld	(0x06, sp), a
      000593 AEr00r00         [ 2] 1145 	ldw	x, #_LCD_RAM+0
      000596 72 FB 08         [ 2] 1146 	addw	x, (0x08, sp)
      000599 9F               [ 1] 1147 	ld	a, xl
      00059A 1B 01            [ 1] 1148 	add	a, (0x01, sp)
      00059C 97               [ 1] 1149 	ld	xl, a
      00059D 9E               [ 1] 1150 	ld	a, xh
      00059E A9 00            [ 1] 1151 	adc	a, #0x00
      0005A0 95               [ 1] 1152 	ld	xh, a
      0005A1 F6               [ 1] 1153 	ld	a, (x)
      0005A2 A4 F0            [ 1] 1154 	and	a, #0xf0
      0005A4 1E 06            [ 2] 1155 	ldw	x, (0x06, sp)
      0005A6 F7               [ 1] 1156 	ld	(x), a
                                   1157 ;	snake_game.c: 326: LCD_RAM[tmp_x][tmp_y] |= snake_tiles[tileID][1] & 0x0F;
      0005A7 AEr00r00         [ 2] 1158 	ldw	x, #_LCD_RAM+0
      0005AA 72 FB 08         [ 2] 1159 	addw	x, (0x08, sp)
      0005AD 9F               [ 1] 1160 	ld	a, xl
      0005AE 1B 01            [ 1] 1161 	add	a, (0x01, sp)
      0005B0 6B 05            [ 1] 1162 	ld	(0x05, sp), a
      0005B2 9E               [ 1] 1163 	ld	a, xh
      0005B3 A9 00            [ 1] 1164 	adc	a, #0x00
      0005B5 6B 04            [ 1] 1165 	ld	(0x04, sp), a
      0005B7 AEr00r00         [ 2] 1166 	ldw	x, #_LCD_RAM+0
      0005BA 72 FB 08         [ 2] 1167 	addw	x, (0x08, sp)
      0005BD 9F               [ 1] 1168 	ld	a, xl
      0005BE 1B 01            [ 1] 1169 	add	a, (0x01, sp)
      0005C0 97               [ 1] 1170 	ld	xl, a
      0005C1 9E               [ 1] 1171 	ld	a, xh
      0005C2 A9 00            [ 1] 1172 	adc	a, #0x00
      0005C4 95               [ 1] 1173 	ld	xh, a
      0005C5 90 F6            [ 1] 1174 	ld	a, (y)
      0005C7 A4 0F            [ 1] 1175 	and	a, #0x0f
      0005C9 6B 03            [ 1] 1176 	ld	(0x03, sp), a
      0005CB F6               [ 1] 1177 	ld	a, (x)
      0005CC 1A 03            [ 1] 1178 	or	a, (0x03, sp)
      0005CE 1E 04            [ 2] 1179 	ldw	x, (0x04, sp)
      0005D0 F7               [ 1] 1180 	ld	(x), a
      0005D1                       1181 00103$:
                                   1182 ;	snake_game.c: 329: refreshSnakeTile(x,y);
      0005D1 7B 2C            [ 1] 1183 	ld	a, (0x2c, sp)
      0005D3 88               [ 1] 1184 	push	a
      0005D4 7B 46            [ 1] 1185 	ld	a, (0x46, sp)
      0005D6 88               [ 1] 1186 	push	a
      0005D7 CDr01r8E         [ 4] 1187 	call	_refreshSnakeTile
      0005DA 5B 02            [ 2] 1188 	addw	sp, #2
      0005DC 5B 42            [ 2] 1189 	addw	sp, #66
      0005DE 81               [ 4] 1190 	ret
                                   1191 ;	snake_game.c: 342: void iterateSnakeHead()
                                   1192 ;	-----------------------------------------
                                   1193 ;	 function iterateSnakeHead
                                   1194 ;	-----------------------------------------
      0005DF                       1195 _iterateSnakeHead:
      0005DF 88               [ 1] 1196 	push	a
                                   1197 ;	snake_game.c: 345: switch(snake.head.direction){
      0005E0 AEr00rDD         [ 2] 1198 	ldw	x, #_snake+5
      0005E3 F6               [ 1] 1199 	ld	a, (x)
      0005E4 6B 01            [ 1] 1200 	ld	(0x01, sp), a
      0005E6 7B 01            [ 1] 1201 	ld	a, (0x01, sp)
      0005E8 A1 05            [ 1] 1202 	cp	a, #0x05
      0005EA 23 03            [ 2] 1203 	jrule	00146$
      0005EC CCr07r51         [ 2] 1204 	jp	00124$
      0005EF                       1205 00146$:
      0005EF 5F               [ 1] 1206 	clrw	x
      0005F0 7B 01            [ 1] 1207 	ld	a, (0x01, sp)
      0005F2 97               [ 1] 1208 	ld	xl, a
      0005F3 58               [ 2] 1209 	sllw	x
      0005F4 DEu05uF8         [ 2] 1210 	ldw	x, (#00147$, x)
      0005F7 FC               [ 2] 1211 	jp	(x)
      0005F8                       1212 00147$:
      0005F8r06r04                 1213 	.dw	#00101$
      0005FAr06r5D                 1214 	.dw	#00102$
      0005FCr06r9C                 1215 	.dw	#00105$
      0005FEr06rD9                 1216 	.dw	#00108$
      000600r07r17                 1217 	.dw	#00111$
      000602r07r51                 1218 	.dw	#00114$
                                   1219 ;	snake_game.c: 346: case INITIAL:
      000604                       1220 00101$:
                                   1221 ;	snake_game.c: 347: setSnakeTile(12, 6, S_TD);
      000604 4B 0D            [ 1] 1222 	push	#0x0d
      000606 4B 06            [ 1] 1223 	push	#0x06
      000608 4B 0C            [ 1] 1224 	push	#0x0c
      00060A CDr02rA1         [ 4] 1225 	call	_setSnakeTile
      00060D 5B 03            [ 2] 1226 	addw	sp, #3
                                   1227 ;	snake_game.c: 348: setSnakeTile(12, 7, S_V);
      00060F 4B 01            [ 1] 1228 	push	#0x01
      000611 4B 07            [ 1] 1229 	push	#0x07
      000613 4B 0C            [ 1] 1230 	push	#0x0c
      000615 CDr02rA1         [ 4] 1231 	call	_setSnakeTile
      000618 5B 03            [ 2] 1232 	addw	sp, #3
                                   1233 ;	snake_game.c: 349: setSnakeTile(12, 8, S_V);
      00061A 4B 01            [ 1] 1234 	push	#0x01
      00061C 4B 08            [ 1] 1235 	push	#0x08
      00061E 4B 0C            [ 1] 1236 	push	#0x0c
      000620 CDr02rA1         [ 4] 1237 	call	_setSnakeTile
      000623 5B 03            [ 2] 1238 	addw	sp, #3
                                   1239 ;	snake_game.c: 350: setSnakeTile(12, 9, S_HD);
      000625 4B 09            [ 1] 1240 	push	#0x09
      000627 4B 09            [ 1] 1241 	push	#0x09
      000629 4B 0C            [ 1] 1242 	push	#0x0c
      00062B CDr02rA1         [ 4] 1243 	call	_setSnakeTile
      00062E 5B 03            [ 2] 1244 	addw	sp, #3
                                   1245 ;	snake_game.c: 352: snake.tail.x = 12;
      000630 AEr00rD8         [ 2] 1246 	ldw	x, #_snake+0
      000633 A6 0C            [ 1] 1247 	ld	a, #0x0c
      000635 F7               [ 1] 1248 	ld	(x), a
                                   1249 ;	snake_game.c: 353: snake.tail.y = 6;
      000636 AEr00rD9         [ 2] 1250 	ldw	x, #_snake+1
      000639 A6 06            [ 1] 1251 	ld	a, #0x06
      00063B F7               [ 1] 1252 	ld	(x), a
                                   1253 ;	snake_game.c: 355: snake.head.x = 12;
      00063C AEr00rDB         [ 2] 1254 	ldw	x, #_snake+3
      00063F A6 0C            [ 1] 1255 	ld	a, #0x0c
      000641 F7               [ 1] 1256 	ld	(x), a
                                   1257 ;	snake_game.c: 356: snake.head.y = 9;
      000642 AEr00rDC         [ 2] 1258 	ldw	x, #_snake+4
      000645 A6 09            [ 1] 1259 	ld	a, #0x09
      000647 F7               [ 1] 1260 	ld	(x), a
                                   1261 ;	snake_game.c: 358: snake.length = 4;
      000648 AEr00rDE         [ 2] 1262 	ldw	x, #_snake+6
      00064B A6 04            [ 1] 1263 	ld	a, #0x04
      00064D F7               [ 1] 1264 	ld	(x), a
                                   1265 ;	snake_game.c: 359: snake.head.direction = DOWN;
      00064E AEr00rDD         [ 2] 1266 	ldw	x, #_snake+5
      000651 A6 04            [ 1] 1267 	ld	a, #0x04
      000653 F7               [ 1] 1268 	ld	(x), a
                                   1269 ;	snake_game.c: 360: snake.tail.direction = DOWN;
      000654 AEr00rDA         [ 2] 1270 	ldw	x, #_snake+2
      000657 A6 04            [ 1] 1271 	ld	a, #0x04
      000659 F7               [ 1] 1272 	ld	(x), a
                                   1273 ;	snake_game.c: 361: return; /* Quit function, everything is set up*/
      00065A CCr07r51         [ 2] 1274 	jp	00124$
                                   1275 ;	snake_game.c: 363: case LEFT:
      00065D                       1276 00102$:
                                   1277 ;	snake_game.c: 334: setSnakeTile(snake.head.x, snake.head.y, tileID);
      00065D AEr00rDC         [ 2] 1278 	ldw	x, #_snake+4
      000660 F6               [ 1] 1279 	ld	a, (x)
      000661 AEr00rDB         [ 2] 1280 	ldw	x, #_snake+3
      000664 88               [ 1] 1281 	push	a
      000665 F6               [ 1] 1282 	ld	a, (x)
      000666 97               [ 1] 1283 	ld	xl, a
      000667 84               [ 1] 1284 	pop	a
      000668 4B 00            [ 1] 1285 	push	#0x00
      00066A 88               [ 1] 1286 	push	a
      00066B 9F               [ 1] 1287 	ld	a, xl
      00066C 88               [ 1] 1288 	push	a
      00066D CDr02rA1         [ 4] 1289 	call	_setSnakeTile
      000670 5B 03            [ 2] 1290 	addw	sp, #3
                                   1291 ;	snake_game.c: 365: snake.head.x--;
      000672 AEr00rDB         [ 2] 1292 	ldw	x, #_snake+3
      000675 7A               [ 1] 1293 	dec	(x)
                                   1294 ;	snake_game.c: 366: if(snake.head.x > 20)
      000676 AEr00rDB         [ 2] 1295 	ldw	x, #_snake+3
      000679 F6               [ 1] 1296 	ld	a, (x)
      00067A A1 14            [ 1] 1297 	cp	a, #0x14
      00067C 23 06            [ 2] 1298 	jrule	00104$
                                   1299 ;	snake_game.c: 367: snake.head.x = 20;
      00067E AEr00rDB         [ 2] 1300 	ldw	x, #_snake+3
      000681 A6 14            [ 1] 1301 	ld	a, #0x14
      000683 F7               [ 1] 1302 	ld	(x), a
      000684                       1303 00104$:
                                   1304 ;	snake_game.c: 334: setSnakeTile(snake.head.x, snake.head.y, tileID);
      000684 AEr00rDC         [ 2] 1305 	ldw	x, #_snake+4
      000687 F6               [ 1] 1306 	ld	a, (x)
      000688 AEr00rDB         [ 2] 1307 	ldw	x, #_snake+3
      00068B 88               [ 1] 1308 	push	a
      00068C F6               [ 1] 1309 	ld	a, (x)
      00068D 97               [ 1] 1310 	ld	xl, a
      00068E 84               [ 1] 1311 	pop	a
      00068F 4B 07            [ 1] 1312 	push	#0x07
      000691 88               [ 1] 1313 	push	a
      000692 9F               [ 1] 1314 	ld	a, xl
      000693 88               [ 1] 1315 	push	a
      000694 CDr02rA1         [ 4] 1316 	call	_setSnakeTile
      000697 5B 03            [ 2] 1317 	addw	sp, #3
                                   1318 ;	snake_game.c: 369: break;
      000699 CCr07r51         [ 2] 1319 	jp	00124$
                                   1320 ;	snake_game.c: 371: case RIGHT: 
      00069C                       1321 00105$:
                                   1322 ;	snake_game.c: 334: setSnakeTile(snake.head.x, snake.head.y, tileID);
      00069C AEr00rDC         [ 2] 1323 	ldw	x, #_snake+4
      00069F F6               [ 1] 1324 	ld	a, (x)
      0006A0 AEr00rDB         [ 2] 1325 	ldw	x, #_snake+3
      0006A3 88               [ 1] 1326 	push	a
      0006A4 F6               [ 1] 1327 	ld	a, (x)
      0006A5 97               [ 1] 1328 	ld	xl, a
      0006A6 84               [ 1] 1329 	pop	a
      0006A7 4B 00            [ 1] 1330 	push	#0x00
      0006A9 88               [ 1] 1331 	push	a
      0006AA 9F               [ 1] 1332 	ld	a, xl
      0006AB 88               [ 1] 1333 	push	a
      0006AC CDr02rA1         [ 4] 1334 	call	_setSnakeTile
      0006AF 5B 03            [ 2] 1335 	addw	sp, #3
                                   1336 ;	snake_game.c: 373: snake.head.x++;
      0006B1 AEr00rDB         [ 2] 1337 	ldw	x, #_snake+3
      0006B4 7C               [ 1] 1338 	inc	(x)
                                   1339 ;	snake_game.c: 374: if(snake.head.x > 20)
      0006B5 AEr00rDB         [ 2] 1340 	ldw	x, #_snake+3
      0006B8 F6               [ 1] 1341 	ld	a, (x)
      0006B9 A1 14            [ 1] 1342 	cp	a, #0x14
      0006BB 23 04            [ 2] 1343 	jrule	00107$
                                   1344 ;	snake_game.c: 375: snake.head.x = 0;
      0006BD AEr00rDB         [ 2] 1345 	ldw	x, #_snake+3
      0006C0 7F               [ 1] 1346 	clr	(x)
      0006C1                       1347 00107$:
                                   1348 ;	snake_game.c: 334: setSnakeTile(snake.head.x, snake.head.y, tileID);
      0006C1 AEr00rDC         [ 2] 1349 	ldw	x, #_snake+4
      0006C4 F6               [ 1] 1350 	ld	a, (x)
      0006C5 AEr00rDB         [ 2] 1351 	ldw	x, #_snake+3
      0006C8 88               [ 1] 1352 	push	a
      0006C9 F6               [ 1] 1353 	ld	a, (x)
      0006CA 97               [ 1] 1354 	ld	xl, a
      0006CB 84               [ 1] 1355 	pop	a
      0006CC 4B 06            [ 1] 1356 	push	#0x06
      0006CE 88               [ 1] 1357 	push	a
      0006CF 9F               [ 1] 1358 	ld	a, xl
      0006D0 88               [ 1] 1359 	push	a
      0006D1 CDr02rA1         [ 4] 1360 	call	_setSnakeTile
      0006D4 5B 03            [ 2] 1361 	addw	sp, #3
                                   1362 ;	snake_game.c: 377: break;
      0006D6 CCr07r51         [ 2] 1363 	jp	00124$
                                   1364 ;	snake_game.c: 379: case UP:
      0006D9                       1365 00108$:
                                   1366 ;	snake_game.c: 334: setSnakeTile(snake.head.x, snake.head.y, tileID);
      0006D9 AEr00rDC         [ 2] 1367 	ldw	x, #_snake+4
      0006DC F6               [ 1] 1368 	ld	a, (x)
      0006DD AEr00rDB         [ 2] 1369 	ldw	x, #_snake+3
      0006E0 88               [ 1] 1370 	push	a
      0006E1 F6               [ 1] 1371 	ld	a, (x)
      0006E2 97               [ 1] 1372 	ld	xl, a
      0006E3 84               [ 1] 1373 	pop	a
      0006E4 4B 01            [ 1] 1374 	push	#0x01
      0006E6 88               [ 1] 1375 	push	a
      0006E7 9F               [ 1] 1376 	ld	a, xl
      0006E8 88               [ 1] 1377 	push	a
      0006E9 CDr02rA1         [ 4] 1378 	call	_setSnakeTile
      0006EC 5B 03            [ 2] 1379 	addw	sp, #3
                                   1380 ;	snake_game.c: 381: snake.head.y--;
      0006EE AEr00rDC         [ 2] 1381 	ldw	x, #_snake+4
      0006F1 7A               [ 1] 1382 	dec	(x)
                                   1383 ;	snake_game.c: 382: if(snake.head.y > 9)
      0006F2 AEr00rDC         [ 2] 1384 	ldw	x, #_snake+4
      0006F5 F6               [ 1] 1385 	ld	a, (x)
      0006F6 A1 09            [ 1] 1386 	cp	a, #0x09
      0006F8 23 06            [ 2] 1387 	jrule	00110$
                                   1388 ;	snake_game.c: 383: snake.head.y = 9;
      0006FA AEr00rDC         [ 2] 1389 	ldw	x, #_snake+4
      0006FD A6 09            [ 1] 1390 	ld	a, #0x09
      0006FF F7               [ 1] 1391 	ld	(x), a
      000700                       1392 00110$:
                                   1393 ;	snake_game.c: 334: setSnakeTile(snake.head.x, snake.head.y, tileID);
      000700 AEr00rDC         [ 2] 1394 	ldw	x, #_snake+4
      000703 F6               [ 1] 1395 	ld	a, (x)
      000704 AEr00rDB         [ 2] 1396 	ldw	x, #_snake+3
      000707 88               [ 1] 1397 	push	a
      000708 F6               [ 1] 1398 	ld	a, (x)
      000709 97               [ 1] 1399 	ld	xl, a
      00070A 84               [ 1] 1400 	pop	a
      00070B 4B 08            [ 1] 1401 	push	#0x08
      00070D 88               [ 1] 1402 	push	a
      00070E 9F               [ 1] 1403 	ld	a, xl
      00070F 88               [ 1] 1404 	push	a
      000710 CDr02rA1         [ 4] 1405 	call	_setSnakeTile
      000713 5B 03            [ 2] 1406 	addw	sp, #3
                                   1407 ;	snake_game.c: 385: break;
      000715 20 3A            [ 2] 1408 	jra	00124$
                                   1409 ;	snake_game.c: 387: case DOWN: 
      000717                       1410 00111$:
                                   1411 ;	snake_game.c: 334: setSnakeTile(snake.head.x, snake.head.y, tileID);
      000717 AEr00rDC         [ 2] 1412 	ldw	x, #_snake+4
      00071A F6               [ 1] 1413 	ld	a, (x)
      00071B AEr00rDB         [ 2] 1414 	ldw	x, #_snake+3
      00071E 88               [ 1] 1415 	push	a
      00071F F6               [ 1] 1416 	ld	a, (x)
      000720 97               [ 1] 1417 	ld	xl, a
      000721 84               [ 1] 1418 	pop	a
      000722 4B 01            [ 1] 1419 	push	#0x01
      000724 88               [ 1] 1420 	push	a
      000725 9F               [ 1] 1421 	ld	a, xl
      000726 88               [ 1] 1422 	push	a
      000727 CDr02rA1         [ 4] 1423 	call	_setSnakeTile
      00072A 5B 03            [ 2] 1424 	addw	sp, #3
                                   1425 ;	snake_game.c: 389: snake.head.y++;
      00072C AEr00rDC         [ 2] 1426 	ldw	x, #_snake+4
      00072F 7C               [ 1] 1427 	inc	(x)
                                   1428 ;	snake_game.c: 390: if(snake.head.y > 9)
      000730 AEr00rDC         [ 2] 1429 	ldw	x, #_snake+4
      000733 F6               [ 1] 1430 	ld	a, (x)
      000734 A1 09            [ 1] 1431 	cp	a, #0x09
      000736 23 04            [ 2] 1432 	jrule	00113$
                                   1433 ;	snake_game.c: 391: snake.head.y = 0;
      000738 AEr00rDC         [ 2] 1434 	ldw	x, #_snake+4
      00073B 7F               [ 1] 1435 	clr	(x)
      00073C                       1436 00113$:
                                   1437 ;	snake_game.c: 334: setSnakeTile(snake.head.x, snake.head.y, tileID);
      00073C AEr00rDC         [ 2] 1438 	ldw	x, #_snake+4
      00073F F6               [ 1] 1439 	ld	a, (x)
      000740 AEr00rDB         [ 2] 1440 	ldw	x, #_snake+3
      000743 88               [ 1] 1441 	push	a
      000744 F6               [ 1] 1442 	ld	a, (x)
      000745 97               [ 1] 1443 	ld	xl, a
      000746 84               [ 1] 1444 	pop	a
      000747 4B 09            [ 1] 1445 	push	#0x09
      000749 88               [ 1] 1446 	push	a
      00074A 9F               [ 1] 1447 	ld	a, xl
      00074B 88               [ 1] 1448 	push	a
      00074C CDr02rA1         [ 4] 1449 	call	_setSnakeTile
      00074F 5B 03            [ 2] 1450 	addw	sp, #3
                                   1451 ;	snake_game.c: 393: break;
                                   1452 ;	snake_game.c: 395: case DEAD:
                                   1453 ;	snake_game.c: 397: }
      000751                       1454 00114$:
      000751                       1455 00124$:
      000751 84               [ 1] 1456 	pop	a
      000752 81               [ 4] 1457 	ret
                                   1458 ;	snake_game.c: 400: void iterateSnakeTail()
                                   1459 ;	-----------------------------------------
                                   1460 ;	 function iterateSnakeTail
                                   1461 ;	-----------------------------------------
      000753                       1462 _iterateSnakeTail:
      000753 52 12            [ 2] 1463 	sub	sp, #18
                                   1464 ;	snake_game.c: 339: setSnakeTile(snake.tail.x, snake.tail.y, tileID);
      000755 AEr00rD9         [ 2] 1465 	ldw	x, #_snake+1
      000758 F6               [ 1] 1466 	ld	a, (x)
      000759 AEr00rD8         [ 2] 1467 	ldw	x, #_snake+0
      00075C 88               [ 1] 1468 	push	a
      00075D F6               [ 1] 1469 	ld	a, (x)
      00075E 97               [ 1] 1470 	ld	xl, a
      00075F 84               [ 1] 1471 	pop	a
      000760 4B 11            [ 1] 1472 	push	#0x11
      000762 88               [ 1] 1473 	push	a
      000763 9F               [ 1] 1474 	ld	a, xl
      000764 88               [ 1] 1475 	push	a
      000765 CDr02rA1         [ 4] 1476 	call	_setSnakeTile
      000768 5B 03            [ 2] 1477 	addw	sp, #3
                                   1478 ;	snake_game.c: 404: switch(snake.tail.direction){
      00076A AEr00rDA         [ 2] 1479 	ldw	x, #_snake+2
      00076D F6               [ 1] 1480 	ld	a, (x)
      00076E 6B 12            [ 1] 1481 	ld	(0x12, sp), a
      000770 7B 12            [ 1] 1482 	ld	a, (0x12, sp)
      000772 A1 01            [ 1] 1483 	cp	a, #0x01
      000774 26 03            [ 1] 1484 	jrne	00223$
      000776 CCr07rE3         [ 2] 1485 	jp	00108$
      000779                       1486 00223$:
      000779 7B 12            [ 1] 1487 	ld	a, (0x12, sp)
      00077B A1 02            [ 1] 1488 	cp	a, #0x02
      00077D 27 15            [ 1] 1489 	jreq	00101$
      00077F 7B 12            [ 1] 1490 	ld	a, (0x12, sp)
      000781 A1 03            [ 1] 1491 	cp	a, #0x03
      000783 26 03            [ 1] 1492 	jrne	00229$
      000785 CCr08r34         [ 2] 1493 	jp	00115$
      000788                       1494 00229$:
      000788 7B 12            [ 1] 1495 	ld	a, (0x12, sp)
      00078A A1 04            [ 1] 1496 	cp	a, #0x04
      00078C 26 03            [ 1] 1497 	jrne	00232$
      00078E CCr08r84         [ 2] 1498 	jp	00122$
      000791                       1499 00232$:
      000791 CCr08rD0         [ 2] 1500 	jp	00129$
                                   1501 ;	snake_game.c: 405: case RIGHT:
      000794                       1502 00101$:
                                   1503 ;	snake_game.c: 406: snake.tail.x++;
      000794 AEr00rD8         [ 2] 1504 	ldw	x, #_snake+0
      000797 7C               [ 1] 1505 	inc	(x)
                                   1506 ;	snake_game.c: 407: if(snake.tail.x > 20)
      000798 AEr00rD8         [ 2] 1507 	ldw	x, #_snake+0
      00079B F6               [ 1] 1508 	ld	a, (x)
      00079C A1 14            [ 1] 1509 	cp	a, #0x14
      00079E 23 04            [ 2] 1510 	jrule	00103$
                                   1511 ;	snake_game.c: 408: snake.tail.x = 0;
      0007A0 AEr00rD8         [ 2] 1512 	ldw	x, #_snake+0
      0007A3 7F               [ 1] 1513 	clr	(x)
      0007A4                       1514 00103$:
                                   1515 ;	snake_game.c: 410: switch(Snake_array[snake.tail.x][snake.tail.y]){
      0007A4 AEr00r03         [ 2] 1516 	ldw	x, #_Snake_array+0
      0007A7 1F 10            [ 2] 1517 	ldw	(0x10, sp), x
      0007A9 AEr00rD8         [ 2] 1518 	ldw	x, #_snake+0
      0007AC F6               [ 1] 1519 	ld	a, (x)
      0007AD 97               [ 1] 1520 	ld	xl, a
      0007AE A6 0A            [ 1] 1521 	ld	a, #0x0a
      0007B0 42               [ 4] 1522 	mul	x, a
      0007B1 72 FB 10         [ 2] 1523 	addw	x, (0x10, sp)
      0007B4 1F 01            [ 2] 1524 	ldw	(0x01, sp), x
      0007B6 AEr00rD9         [ 2] 1525 	ldw	x, #_snake+1
      0007B9 F6               [ 1] 1526 	ld	a, (x)
      0007BA 5F               [ 1] 1527 	clrw	x
      0007BB 97               [ 1] 1528 	ld	xl, a
      0007BC 72 FB 01         [ 2] 1529 	addw	x, (0x01, sp)
      0007BF F6               [ 1] 1530 	ld	a, (x)
      0007C0 A1 02            [ 1] 1531 	cp	a, #0x02
      0007C2 27 0D            [ 1] 1532 	jreq	00105$
      0007C4 A1 03            [ 1] 1533 	cp	a, #0x03
      0007C6 26 12            [ 1] 1534 	jrne	00106$
                                   1535 ;	snake_game.c: 411: case(S_LU): snake.tail.direction = UP;    break;
      0007C8 AEr00rDA         [ 2] 1536 	ldw	x, #_snake+2
      0007CB A6 03            [ 1] 1537 	ld	a, #0x03
      0007CD F7               [ 1] 1538 	ld	(x), a
      0007CE CCr08rD0         [ 2] 1539 	jp	00129$
                                   1540 ;	snake_game.c: 412: case(S_LD): snake.tail.direction = DOWN;  break;
      0007D1                       1541 00105$:
      0007D1 AEr00rDA         [ 2] 1542 	ldw	x, #_snake+2
      0007D4 A6 04            [ 1] 1543 	ld	a, #0x04
      0007D6 F7               [ 1] 1544 	ld	(x), a
      0007D7 CCr08rD0         [ 2] 1545 	jp	00129$
                                   1546 ;	snake_game.c: 413: default:    snake.tail.direction = RIGHT; break;
      0007DA                       1547 00106$:
      0007DA AEr00rDA         [ 2] 1548 	ldw	x, #_snake+2
      0007DD A6 02            [ 1] 1549 	ld	a, #0x02
      0007DF F7               [ 1] 1550 	ld	(x), a
                                   1551 ;	snake_game.c: 415: break;
      0007E0 CCr08rD0         [ 2] 1552 	jp	00129$
                                   1553 ;	snake_game.c: 417: case LEFT:
      0007E3                       1554 00108$:
                                   1555 ;	snake_game.c: 418: snake.tail.x--;
      0007E3 AEr00rD8         [ 2] 1556 	ldw	x, #_snake+0
      0007E6 7A               [ 1] 1557 	dec	(x)
                                   1558 ;	snake_game.c: 419: if(snake.tail.x > 20)
      0007E7 AEr00rD8         [ 2] 1559 	ldw	x, #_snake+0
      0007EA F6               [ 1] 1560 	ld	a, (x)
      0007EB A1 14            [ 1] 1561 	cp	a, #0x14
      0007ED 23 06            [ 2] 1562 	jrule	00110$
                                   1563 ;	snake_game.c: 420: snake.tail.x = 20;
      0007EF AEr00rD8         [ 2] 1564 	ldw	x, #_snake+0
      0007F2 A6 14            [ 1] 1565 	ld	a, #0x14
      0007F4 F7               [ 1] 1566 	ld	(x), a
      0007F5                       1567 00110$:
                                   1568 ;	snake_game.c: 422: switch(Snake_array[snake.tail.x][snake.tail.y]){
      0007F5 AEr00r03         [ 2] 1569 	ldw	x, #_Snake_array+0
      0007F8 1F 09            [ 2] 1570 	ldw	(0x09, sp), x
      0007FA AEr00rD8         [ 2] 1571 	ldw	x, #_snake+0
      0007FD F6               [ 1] 1572 	ld	a, (x)
      0007FE 97               [ 1] 1573 	ld	xl, a
      0007FF A6 0A            [ 1] 1574 	ld	a, #0x0a
      000801 42               [ 4] 1575 	mul	x, a
      000802 72 FB 09         [ 2] 1576 	addw	x, (0x09, sp)
      000805 1F 0D            [ 2] 1577 	ldw	(0x0d, sp), x
      000807 AEr00rD9         [ 2] 1578 	ldw	x, #_snake+1
      00080A F6               [ 1] 1579 	ld	a, (x)
      00080B 5F               [ 1] 1580 	clrw	x
      00080C 97               [ 1] 1581 	ld	xl, a
      00080D 72 FB 0D         [ 2] 1582 	addw	x, (0x0d, sp)
      000810 F6               [ 1] 1583 	ld	a, (x)
      000811 A1 04            [ 1] 1584 	cp	a, #0x04
      000813 27 0D            [ 1] 1585 	jreq	00112$
      000815 A1 05            [ 1] 1586 	cp	a, #0x05
      000817 26 12            [ 1] 1587 	jrne	00113$
                                   1588 ;	snake_game.c: 423: case(S_RU): snake.tail.direction = UP;    break;
      000819 AEr00rDA         [ 2] 1589 	ldw	x, #_snake+2
      00081C A6 03            [ 1] 1590 	ld	a, #0x03
      00081E F7               [ 1] 1591 	ld	(x), a
      00081F CCr08rD0         [ 2] 1592 	jp	00129$
                                   1593 ;	snake_game.c: 424: case(S_RD): snake.tail.direction = DOWN;  break;
      000822                       1594 00112$:
      000822 AEr00rDA         [ 2] 1595 	ldw	x, #_snake+2
      000825 A6 04            [ 1] 1596 	ld	a, #0x04
      000827 F7               [ 1] 1597 	ld	(x), a
      000828 CCr08rD0         [ 2] 1598 	jp	00129$
                                   1599 ;	snake_game.c: 425: default:    snake.tail.direction = LEFT;  break;
      00082B                       1600 00113$:
      00082B AEr00rDA         [ 2] 1601 	ldw	x, #_snake+2
      00082E A6 01            [ 1] 1602 	ld	a, #0x01
      000830 F7               [ 1] 1603 	ld	(x), a
                                   1604 ;	snake_game.c: 427: break;
      000831 CCr08rD0         [ 2] 1605 	jp	00129$
                                   1606 ;	snake_game.c: 429: case UP:
      000834                       1607 00115$:
                                   1608 ;	snake_game.c: 430: snake.tail.y--;
      000834 AEr00rD9         [ 2] 1609 	ldw	x, #_snake+1
      000837 7A               [ 1] 1610 	dec	(x)
                                   1611 ;	snake_game.c: 431: if(snake.tail.y > 9)
      000838 AEr00rD9         [ 2] 1612 	ldw	x, #_snake+1
      00083B F6               [ 1] 1613 	ld	a, (x)
      00083C A1 09            [ 1] 1614 	cp	a, #0x09
      00083E 23 06            [ 2] 1615 	jrule	00117$
                                   1616 ;	snake_game.c: 432: snake.tail.y = 9;
      000840 AEr00rD9         [ 2] 1617 	ldw	x, #_snake+1
      000843 A6 09            [ 1] 1618 	ld	a, #0x09
      000845 F7               [ 1] 1619 	ld	(x), a
      000846                       1620 00117$:
                                   1621 ;	snake_game.c: 434: switch(Snake_array[snake.tail.x][snake.tail.y]){
      000846 AEr00r03         [ 2] 1622 	ldw	x, #_Snake_array+0
      000849 1F 05            [ 2] 1623 	ldw	(0x05, sp), x
      00084B AEr00rD8         [ 2] 1624 	ldw	x, #_snake+0
      00084E F6               [ 1] 1625 	ld	a, (x)
      00084F 97               [ 1] 1626 	ld	xl, a
      000850 A6 0A            [ 1] 1627 	ld	a, #0x0a
      000852 42               [ 4] 1628 	mul	x, a
      000853 72 FB 05         [ 2] 1629 	addw	x, (0x05, sp)
      000856 1F 03            [ 2] 1630 	ldw	(0x03, sp), x
      000858 AEr00rD9         [ 2] 1631 	ldw	x, #_snake+1
      00085B F6               [ 1] 1632 	ld	a, (x)
      00085C 5F               [ 1] 1633 	clrw	x
      00085D 97               [ 1] 1634 	ld	xl, a
      00085E 72 FB 03         [ 2] 1635 	addw	x, (0x03, sp)
      000861 F6               [ 1] 1636 	ld	a, (x)
      000862 A1 02            [ 1] 1637 	cp	a, #0x02
      000864 27 06            [ 1] 1638 	jreq	00118$
      000866 A1 04            [ 1] 1639 	cp	a, #0x04
      000868 27 0A            [ 1] 1640 	jreq	00119$
      00086A 20 10            [ 2] 1641 	jra	00120$
                                   1642 ;	snake_game.c: 435: case(S_LD): snake.tail.direction = LEFT;  break;
      00086C                       1643 00118$:
      00086C AEr00rDA         [ 2] 1644 	ldw	x, #_snake+2
      00086F A6 01            [ 1] 1645 	ld	a, #0x01
      000871 F7               [ 1] 1646 	ld	(x), a
      000872 20 5C            [ 2] 1647 	jra	00129$
                                   1648 ;	snake_game.c: 436: case(S_RD): snake.tail.direction = RIGHT; break;
      000874                       1649 00119$:
      000874 AEr00rDA         [ 2] 1650 	ldw	x, #_snake+2
      000877 A6 02            [ 1] 1651 	ld	a, #0x02
      000879 F7               [ 1] 1652 	ld	(x), a
      00087A 20 54            [ 2] 1653 	jra	00129$
                                   1654 ;	snake_game.c: 437: default:    snake.tail.direction = UP;    break;
      00087C                       1655 00120$:
      00087C AEr00rDA         [ 2] 1656 	ldw	x, #_snake+2
      00087F A6 03            [ 1] 1657 	ld	a, #0x03
      000881 F7               [ 1] 1658 	ld	(x), a
                                   1659 ;	snake_game.c: 439: break;
      000882 20 4C            [ 2] 1660 	jra	00129$
                                   1661 ;	snake_game.c: 441: case DOWN:
      000884                       1662 00122$:
                                   1663 ;	snake_game.c: 442: snake.tail.y++;
      000884 AEr00rD9         [ 2] 1664 	ldw	x, #_snake+1
      000887 7C               [ 1] 1665 	inc	(x)
                                   1666 ;	snake_game.c: 443: if(snake.tail.y > 9)
      000888 AEr00rD9         [ 2] 1667 	ldw	x, #_snake+1
      00088B F6               [ 1] 1668 	ld	a, (x)
      00088C A1 09            [ 1] 1669 	cp	a, #0x09
      00088E 23 04            [ 2] 1670 	jrule	00124$
                                   1671 ;	snake_game.c: 444: snake.tail.y = 0;
      000890 AEr00rD9         [ 2] 1672 	ldw	x, #_snake+1
      000893 7F               [ 1] 1673 	clr	(x)
      000894                       1674 00124$:
                                   1675 ;	snake_game.c: 446: switch(Snake_array[snake.tail.x][snake.tail.y]){
      000894 AEr00r03         [ 2] 1676 	ldw	x, #_Snake_array+0
      000897 1F 0B            [ 2] 1677 	ldw	(0x0b, sp), x
      000899 AEr00rD8         [ 2] 1678 	ldw	x, #_snake+0
      00089C F6               [ 1] 1679 	ld	a, (x)
      00089D 97               [ 1] 1680 	ld	xl, a
      00089E A6 0A            [ 1] 1681 	ld	a, #0x0a
      0008A0 42               [ 4] 1682 	mul	x, a
      0008A1 72 FB 0B         [ 2] 1683 	addw	x, (0x0b, sp)
      0008A4 1F 07            [ 2] 1684 	ldw	(0x07, sp), x
      0008A6 AEr00rD9         [ 2] 1685 	ldw	x, #_snake+1
      0008A9 F6               [ 1] 1686 	ld	a, (x)
      0008AA 5F               [ 1] 1687 	clrw	x
      0008AB 97               [ 1] 1688 	ld	xl, a
      0008AC 72 FB 07         [ 2] 1689 	addw	x, (0x07, sp)
      0008AF F6               [ 1] 1690 	ld	a, (x)
      0008B0 A1 03            [ 1] 1691 	cp	a, #0x03
      0008B2 27 06            [ 1] 1692 	jreq	00125$
      0008B4 A1 05            [ 1] 1693 	cp	a, #0x05
      0008B6 27 0A            [ 1] 1694 	jreq	00126$
      0008B8 20 10            [ 2] 1695 	jra	00127$
                                   1696 ;	snake_game.c: 447: case(S_LU): snake.tail.direction = LEFT;  break;
      0008BA                       1697 00125$:
      0008BA AEr00rDA         [ 2] 1698 	ldw	x, #_snake+2
      0008BD A6 01            [ 1] 1699 	ld	a, #0x01
      0008BF F7               [ 1] 1700 	ld	(x), a
      0008C0 20 0E            [ 2] 1701 	jra	00129$
                                   1702 ;	snake_game.c: 448: case(S_RU): snake.tail.direction = RIGHT; break;
      0008C2                       1703 00126$:
      0008C2 AEr00rDA         [ 2] 1704 	ldw	x, #_snake+2
      0008C5 A6 02            [ 1] 1705 	ld	a, #0x02
      0008C7 F7               [ 1] 1706 	ld	(x), a
      0008C8 20 06            [ 2] 1707 	jra	00129$
                                   1708 ;	snake_game.c: 449: default:    snake.tail.direction = DOWN;  break;
      0008CA                       1709 00127$:
      0008CA AEr00rDA         [ 2] 1710 	ldw	x, #_snake+2
      0008CD A6 04            [ 1] 1711 	ld	a, #0x04
      0008CF F7               [ 1] 1712 	ld	(x), a
                                   1713 ;	snake_game.c: 452: }
      0008D0                       1714 00129$:
                                   1715 ;	snake_game.c: 454: switch(snake.tail.direction){
      0008D0 AEr00rDA         [ 2] 1716 	ldw	x, #_snake+2
      0008D3 F6               [ 1] 1717 	ld	a, (x)
      0008D4 6B 0F            [ 1] 1718 	ld	(0x0f, sp), a
      0008D6 7B 0F            [ 1] 1719 	ld	a, (0x0f, sp)
      0008D8 A1 01            [ 1] 1720 	cp	a, #0x01
      0008DA 27 2B            [ 1] 1721 	jreq	00131$
      0008DC 7B 0F            [ 1] 1722 	ld	a, (0x0f, sp)
      0008DE A1 02            [ 1] 1723 	cp	a, #0x02
      0008E0 27 0E            [ 1] 1724 	jreq	00130$
      0008E2 7B 0F            [ 1] 1725 	ld	a, (0x0f, sp)
      0008E4 A1 03            [ 1] 1726 	cp	a, #0x03
      0008E6 27 36            [ 1] 1727 	jreq	00132$
      0008E8 7B 0F            [ 1] 1728 	ld	a, (0x0f, sp)
      0008EA A1 04            [ 1] 1729 	cp	a, #0x04
      0008EC 27 47            [ 1] 1730 	jreq	00133$
      0008EE 20 5A            [ 2] 1731 	jra	00140$
                                   1732 ;	snake_game.c: 455: case(RIGHT): setSnakeTailTile(S_TR); break;
      0008F0                       1733 00130$:
                                   1734 ;	snake_game.c: 339: setSnakeTile(snake.tail.x, snake.tail.y, tileID);
      0008F0 AEr00rD9         [ 2] 1735 	ldw	x, #_snake+1
      0008F3 F6               [ 1] 1736 	ld	a, (x)
      0008F4 AEr00rD8         [ 2] 1737 	ldw	x, #_snake+0
      0008F7 88               [ 1] 1738 	push	a
      0008F8 F6               [ 1] 1739 	ld	a, (x)
      0008F9 97               [ 1] 1740 	ld	xl, a
      0008FA 84               [ 1] 1741 	pop	a
      0008FB 4B 0A            [ 1] 1742 	push	#0x0a
      0008FD 88               [ 1] 1743 	push	a
      0008FE 9F               [ 1] 1744 	ld	a, xl
      0008FF 88               [ 1] 1745 	push	a
      000900 CDr02rA1         [ 4] 1746 	call	_setSnakeTile
      000903 5B 03            [ 2] 1747 	addw	sp, #3
                                   1748 ;	snake_game.c: 455: case(RIGHT): setSnakeTailTile(S_TR); break;
      000905 20 43            [ 2] 1749 	jra	00140$
                                   1750 ;	snake_game.c: 456: case(LEFT):  setSnakeTailTile(S_TL); break;
      000907                       1751 00131$:
                                   1752 ;	snake_game.c: 339: setSnakeTile(snake.tail.x, snake.tail.y, tileID);
      000907 AEr00rD9         [ 2] 1753 	ldw	x, #_snake+1
      00090A F6               [ 1] 1754 	ld	a, (x)
      00090B AEr00rD8         [ 2] 1755 	ldw	x, #_snake+0
      00090E 88               [ 1] 1756 	push	a
      00090F F6               [ 1] 1757 	ld	a, (x)
      000910 97               [ 1] 1758 	ld	xl, a
      000911 84               [ 1] 1759 	pop	a
      000912 4B 0B            [ 1] 1760 	push	#0x0b
      000914 88               [ 1] 1761 	push	a
      000915 9F               [ 1] 1762 	ld	a, xl
      000916 88               [ 1] 1763 	push	a
      000917 CDr02rA1         [ 4] 1764 	call	_setSnakeTile
      00091A 5B 03            [ 2] 1765 	addw	sp, #3
                                   1766 ;	snake_game.c: 456: case(LEFT):  setSnakeTailTile(S_TL); break;
      00091C 20 2C            [ 2] 1767 	jra	00140$
                                   1768 ;	snake_game.c: 457: case(UP):    setSnakeTailTile(S_TU); break;
      00091E                       1769 00132$:
                                   1770 ;	snake_game.c: 339: setSnakeTile(snake.tail.x, snake.tail.y, tileID);
      00091E AEr00rD9         [ 2] 1771 	ldw	x, #_snake+1
      000921 F6               [ 1] 1772 	ld	a, (x)
      000922 AEr00rD8         [ 2] 1773 	ldw	x, #_snake+0
      000925 88               [ 1] 1774 	push	a
      000926 F6               [ 1] 1775 	ld	a, (x)
      000927 97               [ 1] 1776 	ld	xl, a
      000928 84               [ 1] 1777 	pop	a
      000929 4B 0C            [ 1] 1778 	push	#0x0c
      00092B 88               [ 1] 1779 	push	a
      00092C 9F               [ 1] 1780 	ld	a, xl
      00092D 88               [ 1] 1781 	push	a
      00092E CDr02rA1         [ 4] 1782 	call	_setSnakeTile
      000931 5B 03            [ 2] 1783 	addw	sp, #3
                                   1784 ;	snake_game.c: 457: case(UP):    setSnakeTailTile(S_TU); break;
      000933 20 15            [ 2] 1785 	jra	00140$
                                   1786 ;	snake_game.c: 458: case(DOWN):  setSnakeTailTile(S_TD); break;
      000935                       1787 00133$:
                                   1788 ;	snake_game.c: 339: setSnakeTile(snake.tail.x, snake.tail.y, tileID);
      000935 AEr00rD9         [ 2] 1789 	ldw	x, #_snake+1
      000938 F6               [ 1] 1790 	ld	a, (x)
      000939 AEr00rD8         [ 2] 1791 	ldw	x, #_snake+0
      00093C 88               [ 1] 1792 	push	a
      00093D F6               [ 1] 1793 	ld	a, (x)
      00093E 97               [ 1] 1794 	ld	xl, a
      00093F 84               [ 1] 1795 	pop	a
      000940 4B 0D            [ 1] 1796 	push	#0x0d
      000942 88               [ 1] 1797 	push	a
      000943 9F               [ 1] 1798 	ld	a, xl
      000944 88               [ 1] 1799 	push	a
      000945 CDr02rA1         [ 4] 1800 	call	_setSnakeTile
      000948 5B 03            [ 2] 1801 	addw	sp, #3
                                   1802 ;	snake_game.c: 459: }
      00094A                       1803 00140$:
      00094A 5B 12            [ 2] 1804 	addw	sp, #18
      00094C 81               [ 4] 1805 	ret
                                   1806 ;	snake_game.c: 462: void moveSnake(enum snake_orientation move_direction)
                                   1807 ;	-----------------------------------------
                                   1808 ;	 function moveSnake
                                   1809 ;	-----------------------------------------
      00094D                       1810 _moveSnake:
      00094D 52 04            [ 2] 1811 	sub	sp, #4
                                   1812 ;	snake_game.c: 464: switch(move_direction){
      00094F 7B 07            [ 1] 1813 	ld	a, (0x07, sp)
      000951 A1 01            [ 1] 1814 	cp	a, #0x01
      000953 26 03            [ 1] 1815 	jrne	00213$
      000955 CCr09rF2         [ 2] 1816 	jp	00108$
      000958                       1817 00213$:
      000958 7B 07            [ 1] 1818 	ld	a, (0x07, sp)
      00095A A1 02            [ 1] 1819 	cp	a, #0x02
      00095C 27 15            [ 1] 1820 	jreq	00101$
      00095E 7B 07            [ 1] 1821 	ld	a, (0x07, sp)
      000960 A1 03            [ 1] 1822 	cp	a, #0x03
      000962 26 03            [ 1] 1823 	jrne	00219$
      000964 CCr0Ar73         [ 2] 1824 	jp	00115$
      000967                       1825 00219$:
      000967 7B 07            [ 1] 1826 	ld	a, (0x07, sp)
      000969 A1 04            [ 1] 1827 	cp	a, #0x04
      00096B 26 03            [ 1] 1828 	jrne	00222$
      00096D CCr0ArF2         [ 2] 1829 	jp	00122$
      000970                       1830 00222$:
      000970 CCr0Br6C         [ 2] 1831 	jp	00129$
                                   1832 ;	snake_game.c: 465: case RIGHT:
      000973                       1833 00101$:
                                   1834 ;	snake_game.c: 466: switch(snake.head.direction){
      000973 AEr00rDD         [ 2] 1835 	ldw	x, #_snake+5
      000976 F6               [ 1] 1836 	ld	a, (x)
      000977 6B 02            [ 1] 1837 	ld	(0x02, sp), a
      000979 7B 02            [ 1] 1838 	ld	a, (0x02, sp)
      00097B A1 03            [ 1] 1839 	cp	a, #0x03
      00097D 27 08            [ 1] 1840 	jreq	00102$
      00097F 7B 02            [ 1] 1841 	ld	a, (0x02, sp)
      000981 A1 04            [ 1] 1842 	cp	a, #0x04
      000983 27 19            [ 1] 1843 	jreq	00103$
      000985 20 2E            [ 2] 1844 	jra	00104$
                                   1845 ;	snake_game.c: 467: case UP:    setSnakeHeadTile(S_RD); break;
      000987                       1846 00102$:
                                   1847 ;	snake_game.c: 334: setSnakeTile(snake.head.x, snake.head.y, tileID);
      000987 AEr00rDC         [ 2] 1848 	ldw	x, #_snake+4
      00098A F6               [ 1] 1849 	ld	a, (x)
      00098B AEr00rDB         [ 2] 1850 	ldw	x, #_snake+3
      00098E 88               [ 1] 1851 	push	a
      00098F F6               [ 1] 1852 	ld	a, (x)
      000990 97               [ 1] 1853 	ld	xl, a
      000991 84               [ 1] 1854 	pop	a
      000992 4B 04            [ 1] 1855 	push	#0x04
      000994 88               [ 1] 1856 	push	a
      000995 9F               [ 1] 1857 	ld	a, xl
      000996 88               [ 1] 1858 	push	a
      000997 CDr02rA1         [ 4] 1859 	call	_setSnakeTile
      00099A 5B 03            [ 2] 1860 	addw	sp, #3
                                   1861 ;	snake_game.c: 467: case UP:    setSnakeHeadTile(S_RD); break;
      00099C 20 2C            [ 2] 1862 	jra	00105$
                                   1863 ;	snake_game.c: 468: case DOWN:  setSnakeHeadTile(S_RU); break;  
      00099E                       1864 00103$:
                                   1865 ;	snake_game.c: 334: setSnakeTile(snake.head.x, snake.head.y, tileID);
      00099E AEr00rDC         [ 2] 1866 	ldw	x, #_snake+4
      0009A1 F6               [ 1] 1867 	ld	a, (x)
      0009A2 AEr00rDB         [ 2] 1868 	ldw	x, #_snake+3
      0009A5 88               [ 1] 1869 	push	a
      0009A6 F6               [ 1] 1870 	ld	a, (x)
      0009A7 97               [ 1] 1871 	ld	xl, a
      0009A8 84               [ 1] 1872 	pop	a
      0009A9 4B 05            [ 1] 1873 	push	#0x05
      0009AB 88               [ 1] 1874 	push	a
      0009AC 9F               [ 1] 1875 	ld	a, xl
      0009AD 88               [ 1] 1876 	push	a
      0009AE CDr02rA1         [ 4] 1877 	call	_setSnakeTile
      0009B1 5B 03            [ 2] 1878 	addw	sp, #3
                                   1879 ;	snake_game.c: 468: case DOWN:  setSnakeHeadTile(S_RU); break;  
      0009B3 20 15            [ 2] 1880 	jra	00105$
                                   1881 ;	snake_game.c: 469: default:    setSnakeHeadTile(S_H);  break;
      0009B5                       1882 00104$:
                                   1883 ;	snake_game.c: 334: setSnakeTile(snake.head.x, snake.head.y, tileID);
      0009B5 AEr00rDC         [ 2] 1884 	ldw	x, #_snake+4
      0009B8 F6               [ 1] 1885 	ld	a, (x)
      0009B9 AEr00rDB         [ 2] 1886 	ldw	x, #_snake+3
      0009BC 88               [ 1] 1887 	push	a
      0009BD F6               [ 1] 1888 	ld	a, (x)
      0009BE 97               [ 1] 1889 	ld	xl, a
      0009BF 84               [ 1] 1890 	pop	a
      0009C0 4B 00            [ 1] 1891 	push	#0x00
      0009C2 88               [ 1] 1892 	push	a
      0009C3 9F               [ 1] 1893 	ld	a, xl
      0009C4 88               [ 1] 1894 	push	a
      0009C5 CDr02rA1         [ 4] 1895 	call	_setSnakeTile
      0009C8 5B 03            [ 2] 1896 	addw	sp, #3
                                   1897 ;	snake_game.c: 470: }
      0009CA                       1898 00105$:
                                   1899 ;	snake_game.c: 471: snake.head.x++;
      0009CA AEr00rDB         [ 2] 1900 	ldw	x, #_snake+3
      0009CD 7C               [ 1] 1901 	inc	(x)
                                   1902 ;	snake_game.c: 472: if(snake.head.x > 20)
      0009CE AEr00rDB         [ 2] 1903 	ldw	x, #_snake+3
      0009D1 F6               [ 1] 1904 	ld	a, (x)
      0009D2 A1 14            [ 1] 1905 	cp	a, #0x14
      0009D4 23 04            [ 2] 1906 	jrule	00107$
                                   1907 ;	snake_game.c: 473: snake.head.x = 0;
      0009D6 AEr00rDB         [ 2] 1908 	ldw	x, #_snake+3
      0009D9 7F               [ 1] 1909 	clr	(x)
      0009DA                       1910 00107$:
                                   1911 ;	snake_game.c: 334: setSnakeTile(snake.head.x, snake.head.y, tileID);
      0009DA AEr00rDC         [ 2] 1912 	ldw	x, #_snake+4
      0009DD F6               [ 1] 1913 	ld	a, (x)
      0009DE AEr00rDB         [ 2] 1914 	ldw	x, #_snake+3
      0009E1 88               [ 1] 1915 	push	a
      0009E2 F6               [ 1] 1916 	ld	a, (x)
      0009E3 97               [ 1] 1917 	ld	xl, a
      0009E4 84               [ 1] 1918 	pop	a
      0009E5 4B 06            [ 1] 1919 	push	#0x06
      0009E7 88               [ 1] 1920 	push	a
      0009E8 9F               [ 1] 1921 	ld	a, xl
      0009E9 88               [ 1] 1922 	push	a
      0009EA CDr02rA1         [ 4] 1923 	call	_setSnakeTile
      0009ED 5B 03            [ 2] 1924 	addw	sp, #3
                                   1925 ;	snake_game.c: 475: break;
      0009EF CCr0Br6C         [ 2] 1926 	jp	00129$
                                   1927 ;	snake_game.c: 477: case LEFT:
      0009F2                       1928 00108$:
                                   1929 ;	snake_game.c: 478: switch(snake.head.direction){
      0009F2 AEr00rDD         [ 2] 1930 	ldw	x, #_snake+5
      0009F5 F6               [ 1] 1931 	ld	a, (x)
      0009F6 6B 01            [ 1] 1932 	ld	(0x01, sp), a
      0009F8 7B 01            [ 1] 1933 	ld	a, (0x01, sp)
      0009FA A1 03            [ 1] 1934 	cp	a, #0x03
      0009FC 27 08            [ 1] 1935 	jreq	00109$
      0009FE 7B 01            [ 1] 1936 	ld	a, (0x01, sp)
      000A00 A1 04            [ 1] 1937 	cp	a, #0x04
      000A02 27 19            [ 1] 1938 	jreq	00110$
      000A04 20 2E            [ 2] 1939 	jra	00111$
                                   1940 ;	snake_game.c: 479: case UP:    setSnakeHeadTile(S_LD); break;
      000A06                       1941 00109$:
                                   1942 ;	snake_game.c: 334: setSnakeTile(snake.head.x, snake.head.y, tileID);
      000A06 AEr00rDC         [ 2] 1943 	ldw	x, #_snake+4
      000A09 F6               [ 1] 1944 	ld	a, (x)
      000A0A AEr00rDB         [ 2] 1945 	ldw	x, #_snake+3
      000A0D 88               [ 1] 1946 	push	a
      000A0E F6               [ 1] 1947 	ld	a, (x)
      000A0F 97               [ 1] 1948 	ld	xl, a
      000A10 84               [ 1] 1949 	pop	a
      000A11 4B 02            [ 1] 1950 	push	#0x02
      000A13 88               [ 1] 1951 	push	a
      000A14 9F               [ 1] 1952 	ld	a, xl
      000A15 88               [ 1] 1953 	push	a
      000A16 CDr02rA1         [ 4] 1954 	call	_setSnakeTile
      000A19 5B 03            [ 2] 1955 	addw	sp, #3
                                   1956 ;	snake_game.c: 479: case UP:    setSnakeHeadTile(S_LD); break;
      000A1B 20 2C            [ 2] 1957 	jra	00112$
                                   1958 ;	snake_game.c: 480: case DOWN:  setSnakeHeadTile(S_LU); break;
      000A1D                       1959 00110$:
                                   1960 ;	snake_game.c: 334: setSnakeTile(snake.head.x, snake.head.y, tileID);
      000A1D AEr00rDC         [ 2] 1961 	ldw	x, #_snake+4
      000A20 F6               [ 1] 1962 	ld	a, (x)
      000A21 AEr00rDB         [ 2] 1963 	ldw	x, #_snake+3
      000A24 88               [ 1] 1964 	push	a
      000A25 F6               [ 1] 1965 	ld	a, (x)
      000A26 97               [ 1] 1966 	ld	xl, a
      000A27 84               [ 1] 1967 	pop	a
      000A28 4B 03            [ 1] 1968 	push	#0x03
      000A2A 88               [ 1] 1969 	push	a
      000A2B 9F               [ 1] 1970 	ld	a, xl
      000A2C 88               [ 1] 1971 	push	a
      000A2D CDr02rA1         [ 4] 1972 	call	_setSnakeTile
      000A30 5B 03            [ 2] 1973 	addw	sp, #3
                                   1974 ;	snake_game.c: 480: case DOWN:  setSnakeHeadTile(S_LU); break;
      000A32 20 15            [ 2] 1975 	jra	00112$
                                   1976 ;	snake_game.c: 481: default:    setSnakeHeadTile(S_H);  break;
      000A34                       1977 00111$:
                                   1978 ;	snake_game.c: 334: setSnakeTile(snake.head.x, snake.head.y, tileID);
      000A34 AEr00rDC         [ 2] 1979 	ldw	x, #_snake+4
      000A37 F6               [ 1] 1980 	ld	a, (x)
      000A38 AEr00rDB         [ 2] 1981 	ldw	x, #_snake+3
      000A3B 88               [ 1] 1982 	push	a
      000A3C F6               [ 1] 1983 	ld	a, (x)
      000A3D 97               [ 1] 1984 	ld	xl, a
      000A3E 84               [ 1] 1985 	pop	a
      000A3F 4B 00            [ 1] 1986 	push	#0x00
      000A41 88               [ 1] 1987 	push	a
      000A42 9F               [ 1] 1988 	ld	a, xl
      000A43 88               [ 1] 1989 	push	a
      000A44 CDr02rA1         [ 4] 1990 	call	_setSnakeTile
      000A47 5B 03            [ 2] 1991 	addw	sp, #3
                                   1992 ;	snake_game.c: 482: }
      000A49                       1993 00112$:
                                   1994 ;	snake_game.c: 483: snake.head.x--;
      000A49 AEr00rDB         [ 2] 1995 	ldw	x, #_snake+3
      000A4C 7A               [ 1] 1996 	dec	(x)
                                   1997 ;	snake_game.c: 484: if(snake.head.x > 20)
      000A4D AEr00rDB         [ 2] 1998 	ldw	x, #_snake+3
      000A50 F6               [ 1] 1999 	ld	a, (x)
      000A51 A1 14            [ 1] 2000 	cp	a, #0x14
      000A53 23 06            [ 2] 2001 	jrule	00114$
                                   2002 ;	snake_game.c: 485: snake.head.x = 20;
      000A55 AEr00rDB         [ 2] 2003 	ldw	x, #_snake+3
      000A58 A6 14            [ 1] 2004 	ld	a, #0x14
      000A5A F7               [ 1] 2005 	ld	(x), a
      000A5B                       2006 00114$:
                                   2007 ;	snake_game.c: 334: setSnakeTile(snake.head.x, snake.head.y, tileID);
      000A5B AEr00rDC         [ 2] 2008 	ldw	x, #_snake+4
      000A5E F6               [ 1] 2009 	ld	a, (x)
      000A5F AEr00rDB         [ 2] 2010 	ldw	x, #_snake+3
      000A62 88               [ 1] 2011 	push	a
      000A63 F6               [ 1] 2012 	ld	a, (x)
      000A64 97               [ 1] 2013 	ld	xl, a
      000A65 84               [ 1] 2014 	pop	a
      000A66 4B 07            [ 1] 2015 	push	#0x07
      000A68 88               [ 1] 2016 	push	a
      000A69 9F               [ 1] 2017 	ld	a, xl
      000A6A 88               [ 1] 2018 	push	a
      000A6B CDr02rA1         [ 4] 2019 	call	_setSnakeTile
      000A6E 5B 03            [ 2] 2020 	addw	sp, #3
                                   2021 ;	snake_game.c: 487: break;
      000A70 CCr0Br6C         [ 2] 2022 	jp	00129$
                                   2023 ;	snake_game.c: 489: case UP:
      000A73                       2024 00115$:
                                   2025 ;	snake_game.c: 490: switch(snake.head.direction){
      000A73 AEr00rDD         [ 2] 2026 	ldw	x, #_snake+5
      000A76 F6               [ 1] 2027 	ld	a, (x)
      000A77 6B 04            [ 1] 2028 	ld	(0x04, sp), a
      000A79 7B 04            [ 1] 2029 	ld	a, (0x04, sp)
      000A7B A1 01            [ 1] 2030 	cp	a, #0x01
      000A7D 27 1D            [ 1] 2031 	jreq	00117$
      000A7F 7B 04            [ 1] 2032 	ld	a, (0x04, sp)
      000A81 A1 02            [ 1] 2033 	cp	a, #0x02
      000A83 26 2E            [ 1] 2034 	jrne	00118$
                                   2035 ;	snake_game.c: 334: setSnakeTile(snake.head.x, snake.head.y, tileID);
      000A85 AEr00rDC         [ 2] 2036 	ldw	x, #_snake+4
      000A88 F6               [ 1] 2037 	ld	a, (x)
      000A89 AEr00rDB         [ 2] 2038 	ldw	x, #_snake+3
      000A8C 88               [ 1] 2039 	push	a
      000A8D F6               [ 1] 2040 	ld	a, (x)
      000A8E 97               [ 1] 2041 	ld	xl, a
      000A8F 84               [ 1] 2042 	pop	a
      000A90 4B 03            [ 1] 2043 	push	#0x03
      000A92 88               [ 1] 2044 	push	a
      000A93 9F               [ 1] 2045 	ld	a, xl
      000A94 88               [ 1] 2046 	push	a
      000A95 CDr02rA1         [ 4] 2047 	call	_setSnakeTile
      000A98 5B 03            [ 2] 2048 	addw	sp, #3
                                   2049 ;	snake_game.c: 491: case RIGHT: setSnakeHeadTile(S_LU); break;
      000A9A 20 2C            [ 2] 2050 	jra	00119$
                                   2051 ;	snake_game.c: 492: case LEFT:  setSnakeHeadTile(S_RU); break;
      000A9C                       2052 00117$:
                                   2053 ;	snake_game.c: 334: setSnakeTile(snake.head.x, snake.head.y, tileID);
      000A9C AEr00rDC         [ 2] 2054 	ldw	x, #_snake+4
      000A9F F6               [ 1] 2055 	ld	a, (x)
      000AA0 AEr00rDB         [ 2] 2056 	ldw	x, #_snake+3
      000AA3 88               [ 1] 2057 	push	a
      000AA4 F6               [ 1] 2058 	ld	a, (x)
      000AA5 97               [ 1] 2059 	ld	xl, a
      000AA6 84               [ 1] 2060 	pop	a
      000AA7 4B 05            [ 1] 2061 	push	#0x05
      000AA9 88               [ 1] 2062 	push	a
      000AAA 9F               [ 1] 2063 	ld	a, xl
      000AAB 88               [ 1] 2064 	push	a
      000AAC CDr02rA1         [ 4] 2065 	call	_setSnakeTile
      000AAF 5B 03            [ 2] 2066 	addw	sp, #3
                                   2067 ;	snake_game.c: 492: case LEFT:  setSnakeHeadTile(S_RU); break;
      000AB1 20 15            [ 2] 2068 	jra	00119$
                                   2069 ;	snake_game.c: 493: default:    setSnakeHeadTile(S_V);  break;
      000AB3                       2070 00118$:
                                   2071 ;	snake_game.c: 334: setSnakeTile(snake.head.x, snake.head.y, tileID);
      000AB3 AEr00rDC         [ 2] 2072 	ldw	x, #_snake+4
      000AB6 F6               [ 1] 2073 	ld	a, (x)
      000AB7 AEr00rDB         [ 2] 2074 	ldw	x, #_snake+3
      000ABA 88               [ 1] 2075 	push	a
      000ABB F6               [ 1] 2076 	ld	a, (x)
      000ABC 97               [ 1] 2077 	ld	xl, a
      000ABD 84               [ 1] 2078 	pop	a
      000ABE 4B 01            [ 1] 2079 	push	#0x01
      000AC0 88               [ 1] 2080 	push	a
      000AC1 9F               [ 1] 2081 	ld	a, xl
      000AC2 88               [ 1] 2082 	push	a
      000AC3 CDr02rA1         [ 4] 2083 	call	_setSnakeTile
      000AC6 5B 03            [ 2] 2084 	addw	sp, #3
                                   2085 ;	snake_game.c: 494: }
      000AC8                       2086 00119$:
                                   2087 ;	snake_game.c: 495: snake.head.y--;
      000AC8 AEr00rDC         [ 2] 2088 	ldw	x, #_snake+4
      000ACB 7A               [ 1] 2089 	dec	(x)
                                   2090 ;	snake_game.c: 496: if(snake.head.y > 9)
      000ACC AEr00rDC         [ 2] 2091 	ldw	x, #_snake+4
      000ACF F6               [ 1] 2092 	ld	a, (x)
      000AD0 A1 09            [ 1] 2093 	cp	a, #0x09
      000AD2 23 06            [ 2] 2094 	jrule	00121$
                                   2095 ;	snake_game.c: 497: snake.head.y = 9;
      000AD4 AEr00rDC         [ 2] 2096 	ldw	x, #_snake+4
      000AD7 A6 09            [ 1] 2097 	ld	a, #0x09
      000AD9 F7               [ 1] 2098 	ld	(x), a
      000ADA                       2099 00121$:
                                   2100 ;	snake_game.c: 334: setSnakeTile(snake.head.x, snake.head.y, tileID);
      000ADA AEr00rDC         [ 2] 2101 	ldw	x, #_snake+4
      000ADD F6               [ 1] 2102 	ld	a, (x)
      000ADE AEr00rDB         [ 2] 2103 	ldw	x, #_snake+3
      000AE1 88               [ 1] 2104 	push	a
      000AE2 F6               [ 1] 2105 	ld	a, (x)
      000AE3 97               [ 1] 2106 	ld	xl, a
      000AE4 84               [ 1] 2107 	pop	a
      000AE5 4B 08            [ 1] 2108 	push	#0x08
      000AE7 88               [ 1] 2109 	push	a
      000AE8 9F               [ 1] 2110 	ld	a, xl
      000AE9 88               [ 1] 2111 	push	a
      000AEA CDr02rA1         [ 4] 2112 	call	_setSnakeTile
      000AED 5B 03            [ 2] 2113 	addw	sp, #3
                                   2114 ;	snake_game.c: 499: break;
      000AEF CCr0Br6C         [ 2] 2115 	jp	00129$
                                   2116 ;	snake_game.c: 501: case DOWN:
      000AF2                       2117 00122$:
                                   2118 ;	snake_game.c: 502: switch(snake.head.direction){
      000AF2 AEr00rDD         [ 2] 2119 	ldw	x, #_snake+5
      000AF5 F6               [ 1] 2120 	ld	a, (x)
      000AF6 6B 03            [ 1] 2121 	ld	(0x03, sp), a
      000AF8 7B 03            [ 1] 2122 	ld	a, (0x03, sp)
      000AFA A1 01            [ 1] 2123 	cp	a, #0x01
      000AFC 27 1D            [ 1] 2124 	jreq	00124$
      000AFE 7B 03            [ 1] 2125 	ld	a, (0x03, sp)
      000B00 A1 02            [ 1] 2126 	cp	a, #0x02
      000B02 26 2E            [ 1] 2127 	jrne	00125$
                                   2128 ;	snake_game.c: 334: setSnakeTile(snake.head.x, snake.head.y, tileID);
      000B04 AEr00rDC         [ 2] 2129 	ldw	x, #_snake+4
      000B07 F6               [ 1] 2130 	ld	a, (x)
      000B08 AEr00rDB         [ 2] 2131 	ldw	x, #_snake+3
      000B0B 88               [ 1] 2132 	push	a
      000B0C F6               [ 1] 2133 	ld	a, (x)
      000B0D 97               [ 1] 2134 	ld	xl, a
      000B0E 84               [ 1] 2135 	pop	a
      000B0F 4B 02            [ 1] 2136 	push	#0x02
      000B11 88               [ 1] 2137 	push	a
      000B12 9F               [ 1] 2138 	ld	a, xl
      000B13 88               [ 1] 2139 	push	a
      000B14 CDr02rA1         [ 4] 2140 	call	_setSnakeTile
      000B17 5B 03            [ 2] 2141 	addw	sp, #3
                                   2142 ;	snake_game.c: 503: case RIGHT: setSnakeHeadTile(S_LD); break;
      000B19 20 2C            [ 2] 2143 	jra	00126$
                                   2144 ;	snake_game.c: 504: case LEFT:  setSnakeHeadTile(S_RD); break;
      000B1B                       2145 00124$:
                                   2146 ;	snake_game.c: 334: setSnakeTile(snake.head.x, snake.head.y, tileID);
      000B1B AEr00rDC         [ 2] 2147 	ldw	x, #_snake+4
      000B1E F6               [ 1] 2148 	ld	a, (x)
      000B1F AEr00rDB         [ 2] 2149 	ldw	x, #_snake+3
      000B22 88               [ 1] 2150 	push	a
      000B23 F6               [ 1] 2151 	ld	a, (x)
      000B24 97               [ 1] 2152 	ld	xl, a
      000B25 84               [ 1] 2153 	pop	a
      000B26 4B 04            [ 1] 2154 	push	#0x04
      000B28 88               [ 1] 2155 	push	a
      000B29 9F               [ 1] 2156 	ld	a, xl
      000B2A 88               [ 1] 2157 	push	a
      000B2B CDr02rA1         [ 4] 2158 	call	_setSnakeTile
      000B2E 5B 03            [ 2] 2159 	addw	sp, #3
                                   2160 ;	snake_game.c: 504: case LEFT:  setSnakeHeadTile(S_RD); break;
      000B30 20 15            [ 2] 2161 	jra	00126$
                                   2162 ;	snake_game.c: 505: default:    setSnakeHeadTile(S_V);  break;
      000B32                       2163 00125$:
                                   2164 ;	snake_game.c: 334: setSnakeTile(snake.head.x, snake.head.y, tileID);
      000B32 AEr00rDC         [ 2] 2165 	ldw	x, #_snake+4
      000B35 F6               [ 1] 2166 	ld	a, (x)
      000B36 AEr00rDB         [ 2] 2167 	ldw	x, #_snake+3
      000B39 88               [ 1] 2168 	push	a
      000B3A F6               [ 1] 2169 	ld	a, (x)
      000B3B 97               [ 1] 2170 	ld	xl, a
      000B3C 84               [ 1] 2171 	pop	a
      000B3D 4B 01            [ 1] 2172 	push	#0x01
      000B3F 88               [ 1] 2173 	push	a
      000B40 9F               [ 1] 2174 	ld	a, xl
      000B41 88               [ 1] 2175 	push	a
      000B42 CDr02rA1         [ 4] 2176 	call	_setSnakeTile
      000B45 5B 03            [ 2] 2177 	addw	sp, #3
                                   2178 ;	snake_game.c: 506: }
      000B47                       2179 00126$:
                                   2180 ;	snake_game.c: 507: snake.head.y++;
      000B47 AEr00rDC         [ 2] 2181 	ldw	x, #_snake+4
      000B4A 7C               [ 1] 2182 	inc	(x)
                                   2183 ;	snake_game.c: 508: if(snake.head.y > 9)
      000B4B AEr00rDC         [ 2] 2184 	ldw	x, #_snake+4
      000B4E F6               [ 1] 2185 	ld	a, (x)
      000B4F A1 09            [ 1] 2186 	cp	a, #0x09
      000B51 23 04            [ 2] 2187 	jrule	00128$
                                   2188 ;	snake_game.c: 509: snake.head.y = 0;
      000B53 AEr00rDC         [ 2] 2189 	ldw	x, #_snake+4
      000B56 7F               [ 1] 2190 	clr	(x)
      000B57                       2191 00128$:
                                   2192 ;	snake_game.c: 334: setSnakeTile(snake.head.x, snake.head.y, tileID);
      000B57 AEr00rDC         [ 2] 2193 	ldw	x, #_snake+4
      000B5A F6               [ 1] 2194 	ld	a, (x)
      000B5B AEr00rDB         [ 2] 2195 	ldw	x, #_snake+3
      000B5E 88               [ 1] 2196 	push	a
      000B5F F6               [ 1] 2197 	ld	a, (x)
      000B60 97               [ 1] 2198 	ld	xl, a
      000B61 84               [ 1] 2199 	pop	a
      000B62 4B 09            [ 1] 2200 	push	#0x09
      000B64 88               [ 1] 2201 	push	a
      000B65 9F               [ 1] 2202 	ld	a, xl
      000B66 88               [ 1] 2203 	push	a
      000B67 CDr02rA1         [ 4] 2204 	call	_setSnakeTile
      000B6A 5B 03            [ 2] 2205 	addw	sp, #3
                                   2206 ;	snake_game.c: 512: }
      000B6C                       2207 00129$:
                                   2208 ;	snake_game.c: 514: snake.head.direction = move_direction;
      000B6C AEr00rDD         [ 2] 2209 	ldw	x, #_snake+5
      000B6F 7B 07            [ 1] 2210 	ld	a, (0x07, sp)
      000B71 F7               [ 1] 2211 	ld	(x), a
                                   2212 ;	snake_game.c: 516: iterateSnakeTail();
      000B72 CDr07r53         [ 4] 2213 	call	_iterateSnakeTail
      000B75 5B 04            [ 2] 2214 	addw	sp, #4
      000B77 81               [ 4] 2215 	ret
                                   2216 ;	snake_game.c: 519: int main(void){
                                   2217 ;	-----------------------------------------
                                   2218 ;	 function main
                                   2219 ;	-----------------------------------------
      000B78                       2220 _main:
      000B78 52 03            [ 2] 2221 	sub	sp, #3
                                   2222 ;	snake_game.c: 520: uint8_t volatile j = 0, i = 0, k =0;
      000B7A 0F 03            [ 1] 2223 	clr	(0x03, sp)
      000B7C 0F 02            [ 1] 2224 	clr	(0x02, sp)
      000B7E 0F 01            [ 1] 2225 	clr	(0x01, sp)
                                   2226 ;	snake_game.c: 523: GPIOD->DDR |= LED;    /* Pin directions */
      000B80 72 10 50 11      [ 1] 2227 	bset	0x5011, #0
                                   2228 ;	snake_game.c: 524: GPIOD->CR1 |= LED;    /* Set pin to high speed push-pull */
      000B84 72 10 50 12      [ 1] 2229 	bset	0x5012, #0
                                   2230 ;	snake_game.c: 525: GPIOD->CR2 |= LED;
      000B88 72 10 50 13      [ 1] 2231 	bset	0x5013, #0
                                   2232 ;	snake_game.c: 527: GPIOC->DDR |= (1<<6)|(1<<5)|DC_PIN|RESET_PIN|CS_PIN;  /* SPI MOSI and SPI CLK */
      000B8C AE 50 0C         [ 2] 2233 	ldw	x, #0x500c
      000B8F F6               [ 1] 2234 	ld	a, (x)
      000B90 AA 7C            [ 1] 2235 	or	a, #0x7c
      000B92 F7               [ 1] 2236 	ld	(x), a
                                   2237 ;	snake_game.c: 528: GPIOC->CR1 |= (1<<6)|(1<<5)|DC_PIN|RESET_PIN|CS_PIN;  /* Fast push pull for quick SPI transmissions */
      000B93 AE 50 0D         [ 2] 2238 	ldw	x, #0x500d
      000B96 F6               [ 1] 2239 	ld	a, (x)
      000B97 AA 7C            [ 1] 2240 	or	a, #0x7c
      000B99 F7               [ 1] 2241 	ld	(x), a
                                   2242 ;	snake_game.c: 529: GPIOC->CR2 |= (1<<6)|(1<<5)|DC_PIN|RESET_PIN|CS_PIN;
      000B9A AE 50 0E         [ 2] 2243 	ldw	x, #0x500e
      000B9D F6               [ 1] 2244 	ld	a, (x)
      000B9E AA 7C            [ 1] 2245 	or	a, #0x7c
      000BA0 F7               [ 1] 2246 	ld	(x), a
                                   2247 ;	snake_game.c: 531: GPIOB->DDR &=~ (BUTTON1 | BUTTON2 | BUTTON3 | BUTTON4); /* Set to input */
      000BA1 AE 50 07         [ 2] 2248 	ldw	x, #0x5007
      000BA4 F6               [ 1] 2249 	ld	a, (x)
      000BA5 A4 F0            [ 1] 2250 	and	a, #0xf0
      000BA7 F7               [ 1] 2251 	ld	(x), a
                                   2252 ;	snake_game.c: 532: GPIOB->CR1 |=  (BUTTON1 | BUTTON2 | BUTTON3 | BUTTON4); /* Pull-up without interrupts */
      000BA8 AE 50 08         [ 2] 2253 	ldw	x, #0x5008
      000BAB F6               [ 1] 2254 	ld	a, (x)
      000BAC AA 0F            [ 1] 2255 	or	a, #0x0f
      000BAE F7               [ 1] 2256 	ld	(x), a
                                   2257 ;	snake_game.c: 534: CLR_CS;
      000BAF AE 50 0A         [ 2] 2258 	ldw	x, #0x500a
      000BB2 F6               [ 1] 2259 	ld	a, (x)
      000BB3 AA 08            [ 1] 2260 	or	a, #0x08
      000BB5 F7               [ 1] 2261 	ld	(x), a
                                   2262 ;	snake_game.c: 537: CLK->SWCR  |= 1<<1;   /* Enable clock source switch */
      000BB6 AE 50 C5         [ 2] 2263 	ldw	x, #0x50c5
      000BB9 F6               [ 1] 2264 	ld	a, (x)
      000BBA AA 02            [ 1] 2265 	or	a, #0x02
      000BBC F7               [ 1] 2266 	ld	(x), a
                                   2267 ;	snake_game.c: 538: CLK->SWR    = 0xE1;   /* Switch to high speed internal clock */
      000BBD AE 50 C4         [ 2] 2268 	ldw	x, #0x50c4
      000BC0 A6 E1            [ 1] 2269 	ld	a, #0xe1
      000BC2 F7               [ 1] 2270 	ld	(x), a
                                   2271 ;	snake_game.c: 539: CLK->CKDIVR = 0x00;   /* Set CPU and HSI prescalers to 1 */
      000BC3 AE 50 C6         [ 2] 2272 	ldw	x, #0x50c6
      000BC6 7F               [ 1] 2273 	clr	(x)
                                   2274 ;	snake_game.c: 540: CLK->PCKENR1= (1<<1); /* Enable SPI clock */
      000BC7 AE 50 C7         [ 2] 2275 	ldw	x, #0x50c7
      000BCA A6 02            [ 1] 2276 	ld	a, #0x02
      000BCC F7               [ 1] 2277 	ld	(x), a
                                   2278 ;	snake_game.c: 541: CLK->PCKENR2= (1<<3); /* Enable ADC clock */
      000BCD AE 50 CA         [ 2] 2279 	ldw	x, #0x50ca
      000BD0 A6 08            [ 1] 2280 	ld	a, #0x08
      000BD2 F7               [ 1] 2281 	ld	(x), a
                                   2282 ;	snake_game.c: 544: SPI->CR1  = (1<<6)|(1<<2)|(0x3<<3);   /* Enable SPI, set to master mode */
      000BD3 AE 52 00         [ 2] 2283 	ldw	x, #0x5200
      000BD6 A6 5C            [ 1] 2284 	ld	a, #0x5c
      000BD8 F7               [ 1] 2285 	ld	(x), a
                                   2286 ;	snake_game.c: 545: SPI->CR2  = (1<<7)|(1<<6);            /* Transmit only */
      000BD9 AE 52 01         [ 2] 2287 	ldw	x, #0x5201
      000BDC A6 C0            [ 1] 2288 	ld	a, #0xc0
      000BDE F7               [ 1] 2289 	ld	(x), a
                                   2290 ;	snake_game.c: 546: SPI->CR2 |= (1<<0)|(1<<1);
      000BDF AE 52 01         [ 2] 2291 	ldw	x, #0x5201
      000BE2 F6               [ 1] 2292 	ld	a, (x)
      000BE3 AA 03            [ 1] 2293 	or	a, #0x03
      000BE5 F7               [ 1] 2294 	ld	(x), a
                                   2295 ;	snake_game.c: 549: ADC1->CSR = (0x7<<4); /* Prescaler fmaster/6 */
      000BE6 AE 54 00         [ 2] 2296 	ldw	x, #0x5400
      000BE9 A6 70            [ 1] 2297 	ld	a, #0x70
      000BEB F7               [ 1] 2298 	ld	(x), a
                                   2299 ;	snake_game.c: 551: ADC1->CR2 = 0; /* Data aligned to the left */
      000BEC AE 54 02         [ 2] 2300 	ldw	x, #0x5402
      000BEF 7F               [ 1] 2301 	clr	(x)
                                   2302 ;	snake_game.c: 552: initLCD();
      000BF0 CDr00r00         [ 4] 2303 	call	_initLCD
                                   2304 ;	snake_game.c: 554: while(1){
      000BF3                       2305 00123$:
                                   2306 ;	snake_game.c: 555: GPIOD->ODR ^= LED;
      000BF3 AE 50 0F         [ 2] 2307 	ldw	x, #0x500f
      000BF6 F6               [ 1] 2308 	ld	a, (x)
      000BF7 A8 01            [ 1] 2309 	xor	a, #0x01
      000BF9 F7               [ 1] 2310 	ld	(x), a
                                   2311 ;	snake_game.c: 557: for(i = 0; i < 16; i++)
      000BFA 0F 02            [ 1] 2312 	clr	(0x02, sp)
      000BFC                       2313 00131$:
      000BFC 7B 02            [ 1] 2314 	ld	a, (0x02, sp)
      000BFE A1 10            [ 1] 2315 	cp	a, #0x10
      000C00 24 11            [ 1] 2316 	jrnc	00101$
                                   2317 ;	snake_game.c: 128: for(i = 0; i < delay; i++)
      000C02 5F               [ 1] 2318 	clrw	x
      000C03                       2319 00128$:
      000C03 A3 FD E8         [ 2] 2320 	cpw	x, #0xfde8
      000C06 24 04            [ 1] 2321 	jrnc	00126$
                                   2322 ;	snake_game.c: 129: __asm__("nop");
      000C08 9D               [ 1] 2323 	nop
                                   2324 ;	snake_game.c: 128: for(i = 0; i < delay; i++)
      000C09 5C               [ 2] 2325 	incw	x
      000C0A 20 F7            [ 2] 2326 	jra	00128$
                                   2327 ;	snake_game.c: 558: delay16b(65000);
      000C0C                       2328 00126$:
                                   2329 ;	snake_game.c: 557: for(i = 0; i < 16; i++)
      000C0C 7B 02            [ 1] 2330 	ld	a, (0x02, sp)
      000C0E 4C               [ 1] 2331 	inc	a
      000C0F 6B 02            [ 1] 2332 	ld	(0x02, sp), a
      000C11 20 E9            [ 2] 2333 	jra	00131$
      000C13                       2334 00101$:
                                   2335 ;	snake_game.c: 561: if(!(GPIOB->IDR & BUTTON1)){
      000C13 AE 50 06         [ 2] 2336 	ldw	x, #0x5006
      000C16 F6               [ 1] 2337 	ld	a, (x)
      000C17 44               [ 1] 2338 	srl	a
      000C18 25 10            [ 1] 2339 	jrc	00120$
                                   2340 ;	snake_game.c: 562: if(snake.head.direction != DOWN)
      000C1A AEr00rDD         [ 2] 2341 	ldw	x, #_snake+5
      000C1D F6               [ 1] 2342 	ld	a, (x)
      000C1E A1 04            [ 1] 2343 	cp	a, #0x04
      000C20 27 D1            [ 1] 2344 	jreq	00123$
                                   2345 ;	snake_game.c: 563: moveSnake(UP);
      000C22 4B 03            [ 1] 2346 	push	#0x03
      000C24 CDr09r4D         [ 4] 2347 	call	_moveSnake
      000C27 84               [ 1] 2348 	pop	a
      000C28 20 C9            [ 2] 2349 	jra	00123$
      000C2A                       2350 00120$:
                                   2351 ;	snake_game.c: 565: else if(!(GPIOB->IDR & BUTTON2)){
      000C2A AE 50 06         [ 2] 2352 	ldw	x, #0x5006
      000C2D F6               [ 1] 2353 	ld	a, (x)
      000C2E A5 02            [ 1] 2354 	bcp	a, #0x02
      000C30 26 10            [ 1] 2355 	jrne	00117$
                                   2356 ;	snake_game.c: 566: if(snake.head.direction != UP)
      000C32 AEr00rDD         [ 2] 2357 	ldw	x, #_snake+5
      000C35 F6               [ 1] 2358 	ld	a, (x)
      000C36 A1 03            [ 1] 2359 	cp	a, #0x03
      000C38 27 B9            [ 1] 2360 	jreq	00123$
                                   2361 ;	snake_game.c: 567: moveSnake(DOWN);
      000C3A 4B 04            [ 1] 2362 	push	#0x04
      000C3C CDr09r4D         [ 4] 2363 	call	_moveSnake
      000C3F 84               [ 1] 2364 	pop	a
      000C40 20 B1            [ 2] 2365 	jra	00123$
      000C42                       2366 00117$:
                                   2367 ;	snake_game.c: 569: else if(!(GPIOB->IDR & BUTTON3)){
      000C42 AE 50 06         [ 2] 2368 	ldw	x, #0x5006
      000C45 F6               [ 1] 2369 	ld	a, (x)
      000C46 A5 04            [ 1] 2370 	bcp	a, #0x04
      000C48 26 14            [ 1] 2371 	jrne	00114$
                                   2372 ;	snake_game.c: 570: if(snake.head.direction != RIGHT)
      000C4A AEr00rDD         [ 2] 2373 	ldw	x, #_snake+5
      000C4D F6               [ 1] 2374 	ld	a, (x)
      000C4E A1 02            [ 1] 2375 	cp	a, #0x02
      000C50 26 03            [ 1] 2376 	jrne	00200$
      000C52 CCr0BrF3         [ 2] 2377 	jp	00123$
      000C55                       2378 00200$:
                                   2379 ;	snake_game.c: 571: moveSnake(LEFT);
      000C55 4B 01            [ 1] 2380 	push	#0x01
      000C57 CDr09r4D         [ 4] 2381 	call	_moveSnake
      000C5A 84               [ 1] 2382 	pop	a
      000C5B CCr0BrF3         [ 2] 2383 	jp	00123$
      000C5E                       2384 00114$:
                                   2385 ;	snake_game.c: 573: else if(!(GPIOB->IDR & BUTTON4)){
      000C5E AE 50 06         [ 2] 2386 	ldw	x, #0x5006
      000C61 F6               [ 1] 2387 	ld	a, (x)
      000C62 A5 08            [ 1] 2388 	bcp	a, #0x08
      000C64 26 14            [ 1] 2389 	jrne	00111$
                                   2390 ;	snake_game.c: 574: if(snake.head.direction != LEFT)
      000C66 AEr00rDD         [ 2] 2391 	ldw	x, #_snake+5
      000C69 F6               [ 1] 2392 	ld	a, (x)
      000C6A A1 01            [ 1] 2393 	cp	a, #0x01
      000C6C 26 03            [ 1] 2394 	jrne	00204$
      000C6E CCr0BrF3         [ 2] 2395 	jp	00123$
      000C71                       2396 00204$:
                                   2397 ;	snake_game.c: 575: moveSnake(RIGHT);
      000C71 4B 02            [ 1] 2398 	push	#0x02
      000C73 CDr09r4D         [ 4] 2399 	call	_moveSnake
      000C76 84               [ 1] 2400 	pop	a
      000C77 CCr0BrF3         [ 2] 2401 	jp	00123$
      000C7A                       2402 00111$:
                                   2403 ;	snake_game.c: 578: iterateSnakeHead();
      000C7A CDr05rDF         [ 4] 2404 	call	_iterateSnakeHead
                                   2405 ;	snake_game.c: 579: iterateSnakeTail();
      000C7D CDr07r53         [ 4] 2406 	call	_iterateSnakeTail
      000C80 CCr0BrF3         [ 2] 2407 	jp	00123$
      000C83 5B 03            [ 2] 2408 	addw	sp, #3
      000C85 81               [ 4] 2409 	ret
                                   2410 	.area CODE
      000C86                       2411 _init_sequence:
      000C86 21                    2412 	.db #0x21	; 33
      000C87 AF                    2413 	.db #0xAF	; 175
      000C88 04                    2414 	.db #0x04	; 4
      000C89 13                    2415 	.db #0x13	; 19
      000C8A 20                    2416 	.db #0x20	; 32
      000C8B 0C                    2417 	.db #0x0C	; 12
      000C8C 00                    2418 	.db #0x00	; 0
      000C8D                       2419 _snake_tiles:
      000C8D 64                    2420 	.db #0x64	; 100	'd'
      000C8E 26                    2421 	.db #0x26	; 38
      000C8F 0B                    2422 	.db #0x0B	; 11
      000C90 D0                    2423 	.db #0xD0	; 208
      000C91 6A                    2424 	.db #0x6A	; 106	'j'
      000C92 C0                    2425 	.db #0xC0	; 192
      000C93 65                    2426 	.db #0x65	; 101	'e'
      000C94 30                    2427 	.db #0x30	; 48	'0'
      000C95 0C                    2428 	.db #0x0C	; 12
      000C96 A6                    2429 	.db #0xA6	; 166
      000C97 03                    2430 	.db #0x03	; 3
      000C98 56                    2431 	.db #0x56	; 86	'V'
      000C99 56                    2432 	.db #0x56	; 86	'V'
      000C9A 60                    2433 	.db #0x60	; 96
      000C9B 06                    2434 	.db #0x06	; 6
      000C9C 65                    2435 	.db #0x65	; 101	'e'
      000C9D 0E                    2436 	.db #0x0E	; 14
      000C9E 68                    2437 	.db #0x68	; 104	'h'
      000C9F 16                    2438 	.db #0x16	; 22
      000CA0 70                    2439 	.db #0x70	; 112	'p'
      000CA1 44                    2440 	.db #0x44	; 68	'D'
      000CA2 66                    2441 	.db #0x66	; 102	'f'
      000CA3 66                    2442 	.db #0x66	; 102	'f'
      000CA4 44                    2443 	.db #0x44	; 68	'D'
      000CA5 0F                    2444 	.db #0x0F	; 15
      000CA6 30                    2445 	.db #0x30	; 48	'0'
      000CA7 0C                    2446 	.db #0x0C	; 12
      000CA8 F0                    2447 	.db #0xF0	; 240
      000CA9 6D                    2448 	.db #0x6D	; 109	'm'
      000CAA B6                    2449 	.db #0xB6	; 182
      000CAB 6B                    2450 	.db #0x6B	; 107	'k'
      000CAC D6                    2451 	.db #0xD6	; 214
      000CAD 4A                    2452 	.db #0x4A	; 74	'J'
      000CAE 40                    2453 	.db #0x40	; 64
      000CAF 00                    2454 	.db #0x00	; 0
      000CB0 00                    2455 	.db #0x00	; 0
      000CB1 00                    2456 	.db 0x00
      000CB2 00                    2457 	.db 0x00
                                   2458 	.area INITIALIZER
      000000                       2459 __xinit__LCD_X:
      000000 00                    2460 	.db #0x00	; 0
      000001                       2461 __xinit__LCD_Y:
      000001 00                    2462 	.db #0x00	; 0
      000002                       2463 __xinit__snake_heading:
      000002 00                    2464 	.db #0x00	; 0
      000003                       2465 __xinit__Snake_array:
      000003 00                    2466 	.db #0x00	; 0
      000004 00                    2467 	.db 0x00
      000005 00                    2468 	.db 0x00
      000006 00                    2469 	.db 0x00
      000007 00                    2470 	.db 0x00
      000008 00                    2471 	.db 0x00
      000009 00                    2472 	.db 0x00
      00000A 00                    2473 	.db 0x00
      00000B 00                    2474 	.db 0x00
      00000C 00                    2475 	.db 0x00
      00000D 00                    2476 	.db 0x00
      00000E 00                    2477 	.db 0x00
      00000F 00                    2478 	.db 0x00
      000010 00                    2479 	.db 0x00
      000011 00                    2480 	.db 0x00
      000012 00                    2481 	.db 0x00
      000013 00                    2482 	.db 0x00
      000014 00                    2483 	.db 0x00
      000015 00                    2484 	.db 0x00
      000016 00                    2485 	.db 0x00
      000017 00                    2486 	.db 0x00
      000018 00                    2487 	.db 0x00
      000019 00                    2488 	.db 0x00
      00001A 00                    2489 	.db 0x00
      00001B 00                    2490 	.db 0x00
      00001C 00                    2491 	.db 0x00
      00001D 00                    2492 	.db 0x00
      00001E 00                    2493 	.db 0x00
      00001F 00                    2494 	.db 0x00
      000020 00                    2495 	.db 0x00
      000021 00                    2496 	.db 0x00
      000022 00                    2497 	.db 0x00
      000023 00                    2498 	.db 0x00
      000024 00                    2499 	.db 0x00
      000025 00                    2500 	.db 0x00
      000026 00                    2501 	.db 0x00
      000027 00                    2502 	.db 0x00
      000028 00                    2503 	.db 0x00
      000029 00                    2504 	.db 0x00
      00002A 00                    2505 	.db 0x00
      00002B 00                    2506 	.db 0x00
      00002C 00                    2507 	.db 0x00
      00002D 00                    2508 	.db 0x00
      00002E 00                    2509 	.db 0x00
      00002F 00                    2510 	.db 0x00
      000030 00                    2511 	.db 0x00
      000031 00                    2512 	.db 0x00
      000032 00                    2513 	.db 0x00
      000033 00                    2514 	.db 0x00
      000034 00                    2515 	.db 0x00
      000035 00                    2516 	.db 0x00
      000036 00                    2517 	.db 0x00
      000037 00                    2518 	.db 0x00
      000038 00                    2519 	.db 0x00
      000039 00                    2520 	.db 0x00
      00003A 00                    2521 	.db 0x00
      00003B 00                    2522 	.db 0x00
      00003C 00                    2523 	.db 0x00
      00003D 00                    2524 	.db 0x00
      00003E 00                    2525 	.db 0x00
      00003F 00                    2526 	.db 0x00
      000040 00                    2527 	.db 0x00
      000041 00                    2528 	.db 0x00
      000042 00                    2529 	.db 0x00
      000043 00                    2530 	.db 0x00
      000044 00                    2531 	.db 0x00
      000045 00                    2532 	.db 0x00
      000046 00                    2533 	.db 0x00
      000047 00                    2534 	.db 0x00
      000048 00                    2535 	.db 0x00
      000049 00                    2536 	.db 0x00
      00004A 00                    2537 	.db 0x00
      00004B 00                    2538 	.db 0x00
      00004C 00                    2539 	.db 0x00
      00004D 00                    2540 	.db 0x00
      00004E 00                    2541 	.db 0x00
      00004F 00                    2542 	.db 0x00
      000050 00                    2543 	.db 0x00
      000051 00                    2544 	.db 0x00
      000052 00                    2545 	.db 0x00
      000053 00                    2546 	.db 0x00
      000054 00                    2547 	.db 0x00
      000055 00                    2548 	.db 0x00
      000056 00                    2549 	.db 0x00
      000057 00                    2550 	.db 0x00
      000058 00                    2551 	.db 0x00
      000059 00                    2552 	.db 0x00
      00005A 00                    2553 	.db 0x00
      00005B 00                    2554 	.db 0x00
      00005C 00                    2555 	.db 0x00
      00005D 00                    2556 	.db 0x00
      00005E 00                    2557 	.db 0x00
      00005F 00                    2558 	.db 0x00
      000060 00                    2559 	.db 0x00
      000061 00                    2560 	.db 0x00
      000062 00                    2561 	.db 0x00
      000063 00                    2562 	.db 0x00
      000064 00                    2563 	.db 0x00
      000065 00                    2564 	.db 0x00
      000066 00                    2565 	.db 0x00
      000067 00                    2566 	.db 0x00
      000068 00                    2567 	.db 0x00
      000069 00                    2568 	.db 0x00
      00006A 00                    2569 	.db 0x00
      00006B 00                    2570 	.db 0x00
      00006C 00                    2571 	.db 0x00
      00006D 00                    2572 	.db 0x00
      00006E 00                    2573 	.db 0x00
      00006F 00                    2574 	.db 0x00
      000070 00                    2575 	.db 0x00
      000071 00                    2576 	.db 0x00
      000072 00                    2577 	.db 0x00
      000073 00                    2578 	.db 0x00
      000074 00                    2579 	.db 0x00
      000075 00                    2580 	.db 0x00
      000076 00                    2581 	.db 0x00
      000077 00                    2582 	.db 0x00
      000078 00                    2583 	.db 0x00
      000079 00                    2584 	.db 0x00
      00007A 00                    2585 	.db 0x00
      00007B 00                    2586 	.db 0x00
      00007C 00                    2587 	.db 0x00
      00007D 00                    2588 	.db 0x00
      00007E 00                    2589 	.db 0x00
      00007F 00                    2590 	.db 0x00
      000080 00                    2591 	.db 0x00
      000081 00                    2592 	.db 0x00
      000082 00                    2593 	.db 0x00
      000083 00                    2594 	.db 0x00
      000084 00                    2595 	.db 0x00
      000085 00                    2596 	.db 0x00
      000086 00                    2597 	.db 0x00
      000087 00                    2598 	.db 0x00
      000088 00                    2599 	.db 0x00
      000089 00                    2600 	.db 0x00
      00008A 00                    2601 	.db 0x00
      00008B 00                    2602 	.db 0x00
      00008C 00                    2603 	.db 0x00
      00008D 00                    2604 	.db 0x00
      00008E 00                    2605 	.db 0x00
      00008F 00                    2606 	.db 0x00
      000090 00                    2607 	.db 0x00
      000091 00                    2608 	.db 0x00
      000092 00                    2609 	.db 0x00
      000093 00                    2610 	.db 0x00
      000094 00                    2611 	.db 0x00
      000095 00                    2612 	.db 0x00
      000096 00                    2613 	.db 0x00
      000097 00                    2614 	.db 0x00
      000098 00                    2615 	.db 0x00
      000099 00                    2616 	.db 0x00
      00009A 00                    2617 	.db 0x00
      00009B 00                    2618 	.db 0x00
      00009C 00                    2619 	.db 0x00
      00009D 00                    2620 	.db 0x00
      00009E 00                    2621 	.db 0x00
      00009F 00                    2622 	.db 0x00
      0000A0 00                    2623 	.db 0x00
      0000A1 00                    2624 	.db 0x00
      0000A2 00                    2625 	.db 0x00
      0000A3 00                    2626 	.db 0x00
      0000A4 00                    2627 	.db 0x00
      0000A5 00                    2628 	.db 0x00
      0000A6 00                    2629 	.db 0x00
      0000A7 00                    2630 	.db 0x00
      0000A8 00                    2631 	.db 0x00
      0000A9 00                    2632 	.db 0x00
      0000AA 00                    2633 	.db 0x00
      0000AB 00                    2634 	.db 0x00
      0000AC 00                    2635 	.db 0x00
      0000AD 00                    2636 	.db 0x00
      0000AE 00                    2637 	.db 0x00
      0000AF 00                    2638 	.db 0x00
      0000B0 00                    2639 	.db 0x00
      0000B1 00                    2640 	.db 0x00
      0000B2 00                    2641 	.db 0x00
      0000B3 00                    2642 	.db 0x00
      0000B4 00                    2643 	.db 0x00
      0000B5 00                    2644 	.db 0x00
      0000B6 00                    2645 	.db 0x00
      0000B7 00                    2646 	.db 0x00
      0000B8 00                    2647 	.db 0x00
      0000B9 00                    2648 	.db 0x00
      0000BA 00                    2649 	.db 0x00
      0000BB 00                    2650 	.db 0x00
      0000BC 00                    2651 	.db 0x00
      0000BD 00                    2652 	.db 0x00
      0000BE 00                    2653 	.db 0x00
      0000BF 00                    2654 	.db 0x00
      0000C0 00                    2655 	.db 0x00
      0000C1 00                    2656 	.db 0x00
      0000C2 00                    2657 	.db 0x00
      0000C3 00                    2658 	.db 0x00
      0000C4 00                    2659 	.db 0x00
      0000C5 00                    2660 	.db 0x00
      0000C6 00                    2661 	.db 0x00
      0000C7 00                    2662 	.db 0x00
      0000C8 00                    2663 	.db 0x00
      0000C9 00                    2664 	.db 0x00
      0000CA 00                    2665 	.db 0x00
      0000CB 00                    2666 	.db 0x00
      0000CC 00                    2667 	.db 0x00
      0000CD 00                    2668 	.db 0x00
      0000CE 00                    2669 	.db 0x00
      0000CF 00                    2670 	.db 0x00
      0000D0 00                    2671 	.db 0x00
      0000D1 00                    2672 	.db 0x00
      0000D2 00                    2673 	.db 0x00
      0000D3 00                    2674 	.db 0x00
      0000D4 00                    2675 	.db 0x00
      0000D5                       2676 __xinit__bait_pos:
      0000D5 00                    2677 	.db #0x00	; 0
      0000D6 00                    2678 	.db #0x00	; 0
      0000D7 00                    2679 	.db #0x00	; 0
      0000D8                       2680 __xinit__snake:
      0000D8 00                    2681 	.db #0x00	; 0
      0000D9 00                    2682 	.db #0x00	; 0
      0000DA 00                    2683 	.db #0x00	; 0
      0000DB 00                    2684 	.db #0x00	; 0
      0000DC 00                    2685 	.db #0x00	; 0
      0000DD 00                    2686 	.db #0x00	; 0
      0000DE 00                    2687 	.db #0x00	; 0
                                   2688 	.area CABS (ABS)
